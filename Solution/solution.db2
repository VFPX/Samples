*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="solution.dbf" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*


<TABLE>
	<MemoFile></MemoFile>
	<CodePage>1252</CodePage>
	<LastUpdate></LastUpdate>
	<Database></Database>
	<FileType>0x00000030</FileType>
	<FileType_Descrip>Visual FoxPro</FileType_Descrip>

	<FIELDS>
		<FIELD>
			<Name>KEY</Name>
			<Type>C</Type>
			<Width>4</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>PARENT</Name>
			<Type>C</Type>
			<Width>4</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>TEXT</Name>
			<Type>C</Type>
			<Width>65</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>IMAGE</Name>
			<Type>C</Type>
			<Width>12</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>FILE</Name>
			<Type>C</Type>
			<Width>30</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>TYPE</Name>
			<Type>C</Type>
			<Width>1</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>PATH</Name>
			<Type>C</Type>
			<Width>25</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>METHOD</Name>
			<Type>C</Type>
			<Width>130</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>DESCRIPT</Name>
			<Type>M</Type>
			<Width>4</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
		<FIELD>
			<Name>HELPID</Name>
			<Type>C</Type>
			<Width>20</Width>
			<Decimals>0</Decimals>
			<Null>.F.</Null>
			<NoCPTran>.F.</NoCPTran>
			<Field_Valid_Exp></Field_Valid_Exp>
			<Field_Valid_Text></Field_Valid_Text>
			<Field_Default_Value></Field_Default_Value>
			<Table_Valid_Exp></Table_Valid_Exp>
			<Table_Valid_Text></Table_Valid_Text>
			<LongTableName></LongTableName>
			<Ins_Trig_Exp></Ins_Trig_Exp>
			<Upd_Trig_Exp></Upd_Trig_Exp>
			<Del_Trig_Exp></Del_Trig_Exp>
			<TableComment></TableComment>
			<Autoinc_Nextval>0</Autoinc_Nextval>
			<Autoinc_Step>0</Autoinc_Step>
		</FIELD>
	</FIELDS>


	<indexFile>SOLUTION.CDX</indexFile>

	<INDEXES>
		<INDEX>
			<TagName>KEY</TagName>
			<TagType>REGULAR</TagType>
			<Key>KEY</Key>
			<Filter></Filter>
			<Order>ASCENDING</Order>
			<Collate>MACHINE</Collate>
		</INDEX>
		<INDEX>
			<TagName>PRINTORDER</TagName>
			<TagType>REGULAR</TagType>
			<Key>PARENT+KEY</Key>
			<Filter></Filter>
			<Order>ASCENDING</Order>
			<Collate>MACHINE</Collate>
		</INDEX>
		<INDEX>
			<TagName>TEXT</TagName>
			<TagType>REGULAR</TagType>
			<Key>TEXT</Key>
			<Filter></Filter>
			<Order>ASCENDING</Order>
			<Collate>MACHINE</Collate>
		</INDEX>
	</INDEXES>



	<RECORDS>

		<RECORD>
			<KEY>2_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Controls</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>13_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Databases</TEXT>
			<IMAGE>db</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>3_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Menus</TEXT>
			<IMAGE>menu</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>7_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>ActiveX</TEXT>
			<IMAGE>ole</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>4_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Reports</TEXT>
			<IMAGE>frx</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>6_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Toolbars</TEXT>
			<IMAGE>tbr</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>46_</KEY>
			<PARENT>13_</PARENT>
			<TEXT>Indexes</TEXT>
			<IMAGE>idx</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>45_</KEY>
			<PARENT>13_</PARENT>
			<TEXT>Tables</TEXT>
			<IMAGE>dbf</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>15_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Editbox</TEXT>
			<IMAGE>edt</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>16_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Grid</TEXT>
			<IMAGE>grd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>24_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>List box</TEXT>
			<IMAGE>lst</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>23_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Option buttons</TEXT>
			<IMAGE>opt</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>37_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Page frame</TEXT>
			<IMAGE>pgf</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>14_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Text box</TEXT>
			<IMAGE>txt</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>33_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Timer</TEXT>
			<IMAGE>tmr</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>21_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Add menu items at runtime</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>fillmenu</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates populating a menu at run time. The menu is defined in the Menu Designer, but new menu items are added from a form with the DEFINE BAR command.]]></DESCRIPT>
			<HELPID>1231504</HELPID>
		</RECORD>

		<RECORD>
			<KEY>20_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Disable or display a check beside a menu item</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>chkmenu</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates adding a check mark beside specific menu items at run time with the SET MARK OF command and disabling specific menu items at run time with SET SKIP.]]></DESCRIPT>
			<HELPID>1231503</HELPID>
		</RECORD>

		<RECORD>
			<KEY>18_</KEY>
			<PARENT>16_</PARENT>
			<TEXT>Display calculated values in a column</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>calc</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\grid</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example includes columns in a grid with a ControlSource property setting of an expression or calculation.  Each row in the grid displays its own calculated value, which is dynamically updated.]]></DESCRIPT>
			<HELPID>1231501</HELPID>
		</RECORD>

		<RECORD>
			<KEY>17_</KEY>
			<PARENT>16_</PARENT>
			<TEXT>Display controls in a grid</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>controls</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\grid</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates displaying spinners (for numeric values) and check boxes (for logical values) in the columns of a grid. You can also specify whether the controls are always displayed or not.]]></DESCRIPT>
			<HELPID>1231500</HELPID>
		</RECORD>

		<RECORD>
			<KEY>19_</KEY>
			<PARENT>16_</PARENT>
			<TEXT>Dynamically format grid columns</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dyngrid</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\grid</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates setting the ForeColor and BackColor of grid columns on a row by row basis, depending on various criteria, using the DynamicForeColor and DynamicBackColor properties.]]></DESCRIPT>
			<HELPID>1231502</HELPID>
		</RECORD>

		<RECORD>
			<KEY>27_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Add items interactively to a list box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>ladd</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example allows you to type a value in a text box, then add the value to a list.  You can also remove items from the list.  The key list box methods in this example are AddItem and RemoveItem.]]></DESCRIPT>
			<HELPID>1231506</HELPID>
		</RECORD>

		<RECORD>
			<KEY>26_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Display multiple columns in a list box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>lmulcol</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates changing the number of columns displayed in a list box at run time.  The key properties to set are ColumnCount, ColumnWidths, and RowSource.]]></DESCRIPT>
			<HELPID>1231505</HELPID>
		</RECORD>

		<RECORD>
			<KEY>30_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Move items between list boxes</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>lmover</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates moving one or more items from one list to another when a user clicks command buttons or drags and drops.]]></DESCRIPT>
			<HELPID>1231509</HELPID>
		</RECORD>

		<RECORD>
			<KEY>28_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Multiselect items in a list box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>lmsel</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates managing multiple selected items in a list box. Set MultiSelect to .T. to enable multiple selections. Loop through the list items and check the Selected property to manage.]]></DESCRIPT>
			<HELPID>1231507</HELPID>
		</RECORD>

		<RECORD>
			<KEY>32_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Open multiple files interactively</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>multfile</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates manipulating multiple items in a list box when the RowSourceType of the list is Files.]]></DESCRIPT>
			<HELPID>1231511</HELPID>
		</RECORD>

		<RECORD>
			<KEY>29_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Sort list box items</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>lsort</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates setting the Sorted property to .T. so that list items are alphabetically arranged and setting the MoverBars property to .T. so the user can order the items.]]></DESCRIPT>
			<HELPID>1231508</HELPID>
		</RECORD>

		<RECORD>
			<KEY>31_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Fill a list with values from different sources</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>multdat1</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example demonstrates how to fill a list with values, fields, array elements, table structure, queries, SQL statements, and files.]]></DESCRIPT>
			<HELPID>1231510</HELPID>
		</RECORD>

		<RECORD>
			<KEY>36_</KEY>
			<PARENT>33_</PARENT>
			<TEXT>Display a stop watch</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>swatch</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\timer</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using a class with protected properties and exposed methods. For more description of this example, see Chapter 3, 'Object-Oriented Programming' in the Developer's Guide.]]></DESCRIPT>
			<HELPID>1231514</HELPID>
		</RECORD>

		<RECORD>
			<KEY>35_</KEY>
			<PARENT>33_</PARENT>
			<TEXT>Display a system clock</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>clock</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\timer</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using a class to display a system clock. You can drop the class on any form.]]></DESCRIPT>
			<HELPID>1231513</HELPID>
		</RECORD>

		<RECORD>
			<KEY>34_</KEY>
			<PARENT>33_</PARENT>
			<TEXT>Execute commands at specified intervals</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>timecomm</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\timer</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using a timer to perform an action at user-defined specified intervals.]]></DESCRIPT>
			<HELPID>1231512</HELPID>
		</RECORD>

		<RECORD>
			<KEY>38_</KEY>
			<PARENT>37_</PARENT>
			<TEXT>Change the number of tabs at run time</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>pfsam1</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\pgframe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example presents an address book form with an adjustable number of tabs, each displaying a subset of customer names and phone numbers.]]></DESCRIPT>
			<HELPID>1231515</HELPID>
		</RECORD>

		<RECORD>
			<KEY>39_</KEY>
			<PARENT>37_</PARENT>
			<TEXT>Display different pages without tabs</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>pfsam2</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\pgframe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates programmatically changing the currently displayed page in a page frame without tabs.]]></DESCRIPT>
			<HELPID>1231516</HELPID>
		</RECORD>

		<RECORD>
			<KEY>44_</KEY>
			<PARENT>45_</PARENT>
			<TEXT>Create a default unique id value for a field</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>newid</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates creating a stored procedure in a database to automatically add an unique value to a field whenever a new record is added to the table.]]></DESCRIPT>
			<HELPID>1231517</HELPID>
		</RECORD>

		<RECORD>
			<KEY>49_</KEY>
			<PARENT>46_</PARENT>
			<TEXT>Index on expressions</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>index2</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates the different order when you index on a character field that contains numbers and the VAL( ) of the field.]]></DESCRIPT>
			<HELPID>1231518</HELPID>
		</RECORD>

		<RECORD>
			<KEY>52_</KEY>
			<PARENT>45_</PARENT>
			<TEXT>Sort or order a table at run time</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>order</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example sets the order of the table to an index tag on a field when a user clicks the header of a column displaying the field.]]></DESCRIPT>
			<HELPID>1231519</HELPID>
		</RECORD>

		<RECORD>
			<KEY>54_</KEY>
			<PARENT>15_</PARENT>
			<TEXT>Edit a memo field or text file</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>editbox</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\txt_edt</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates editing a memo field in a table or a text file in an edit box.]]></DESCRIPT>
			<HELPID>1231520</HELPID>
		</RECORD>

		<RECORD>
			<KEY>55_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Command buttons</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>56_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Check box</TEXT>
			<IMAGE>chk</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>57_</KEY>
			<PARENT>45_</PARENT>
			<TEXT>Programmatically check table properties</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>info</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates programmatically determining the database a table belongs to,  and the number of records, the number and type of fields, the index tags and the index expressions it has.]]></DESCRIPT>
			<HELPID>1231521</HELPID>
		</RECORD>

		<RECORD>
			<KEY>62_</KEY>
			<PARENT>16_</PARENT>
			<TEXT>Display child records from a relationship</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>1_many</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\grid</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using a grid to display the child records in a 1-to-many-to-many relationship. As you move through the records in the parent, the child records are automatically displayed.]]></DESCRIPT>
			<HELPID>1231522</HELPID>
		</RECORD>

		<RECORD>
			<KEY>64_</KEY>
			<PARENT>14_</PARENT>
			<TEXT>Format input and validate data in a text box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>textbox</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\txt_edt</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates some Format and InputMask property settings, as well as some date display features, for text boxes.]]></DESCRIPT>
			<HELPID>1231523</HELPID>
		</RECORD>

		<RECORD>
			<KEY>66_</KEY>
			<PARENT>55_</PARENT>
			<TEXT>See command button design options</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>cmdbtn</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\buttons</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The example illustrates a variety of properties that can be set to customize command button display.]]></DESCRIPT>
			<HELPID>1231524</HELPID>
		</RECORD>

		<RECORD>
			<KEY>68_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Windows API</TEXT>
			<IMAGE>api</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>71_</KEY>
			<PARENT>56_</PARENT>
			<TEXT>See check box design options</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>checkbox</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\checkbox</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates the values that can be displayed in a check box, as well as using a check box to toggle form behavior properties.]]></DESCRIPT>
			<HELPID>1231525</HELPID>
		</RECORD>

		<RECORD>
			<KEY>72_</KEY>
			<PARENT>23_</PARENT>
			<TEXT>Present a user with multiple choices</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>quiz</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\buttons</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example uses option buttons to present a short multiple-question quiz on Visual FoxPro. After you take the quiz, you can see your score and the correct answers.]]></DESCRIPT>
			<HELPID>1231526</HELPID>
		</RECORD>

		<RECORD>
			<KEY>73_</KEY>
			<PARENT>15_</PARENT>
			<TEXT>Programmatically manipulate text</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>text</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\txt_edt</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates counting words, paragraphs, characters and searching for text strings in a text file.]]></DESCRIPT>
			<HELPID>1231527</HELPID>
		</RECORD>

		<RECORD>
			<KEY>75_</KEY>
			<PARENT>23_</PARENT>
			<TEXT>Change pages when a user chooses a button</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>msgbox</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\pgframe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example uses six options buttons to let you choose one of the six button combinations (displayed in a page frame) in a MESSAGEBOX command.]]></DESCRIPT>
			<HELPID>1231528</HELPID>
		</RECORD>

		<RECORD>
			<KEY>77_</KEY>
			<PARENT>6_</PARENT>
			<TEXT>Coordinate menu items and toolbar buttons</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>toolmenu</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates providing functionality from a menu and a toolbar so that the same code is executed and both items and buttons can be disabled together.]]></DESCRIPT>
			<HELPID>1231529</HELPID>
		</RECORD>

		<RECORD>
			<KEY>78_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Coordinate menu items and toolbar buttons</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>toolmenu</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates providing functionality from a menu and a toolbar so that the same code is executed and both items and buttons can be disabled together.]]></DESCRIPT>
			<HELPID>1231529</HELPID>
		</RECORD>

		<RECORD>
			<KEY>79_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Use API functions that require a STRUCT</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>systime</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates declaring a Windows API function (GetSystemTime) that requires a pointer to a struct of 16 bit unsigned integers. The struct values are stored in a string and parsed out for information.]]></DESCRIPT>
			<HELPID>1231530</HELPID>
		</RECORD>

		<RECORD>
			<KEY>80_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Use API functions that require pointers to arrays</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>syscolor</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates declaring a Windows API function (SetSysColors) that requires pointers to arrays of integers. You can programmatically get and set the system colors from Visual FoxPro.]]></DESCRIPT>
			<HELPID>1231531</HELPID>
		</RECORD>

		<RECORD>
			<KEY>81_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Read and write VFP Registry values</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>regfox</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates reading Visual FoxPro settings from the Windows Registry and writing new values back out to the Registry.]]></DESCRIPT>
			<HELPID>1231532</HELPID>
		</RECORD>

		<RECORD>
			<KEY>90_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Get application information from the Windows Registry</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>regfile</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates checking to see if an application is registered and retrieving application and version information from the Windows Registry.]]></DESCRIPT>
			<HELPID>1231533</HELPID>
		</RECORD>

		<RECORD>
			<KEY>93_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Display pictures in a list</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>piclist</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\lists</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates populating a list with members of a database and using the Picture property of the list to display an image beside the list.]]></DESCRIPT>
			<HELPID>1231534</HELPID>
		</RECORD>

		<RECORD>
			<KEY>100_</KEY>
			<PARENT>13_</PARENT>
			<TEXT>Transactions</TEXT>
			<IMAGE>db</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>101_</KEY>
			<PARENT>7_</PARENT>
			<TEXT>ActiveX controls</TEXT>
			<IMAGE>ole</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>103_</KEY>
			<PARENT>7_</PARENT>
			<TEXT>Automation</TEXT>
			<IMAGE>ole</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>104_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Add and remove items in a treeview control</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>bldtree</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates allowing a user to interactively add and delete nodes in a treeview control.  You can also save your treeview settings to a table and restore them later.]]></DESCRIPT>
			<HELPID>1231535</HELPID>
		</RECORD>

		<RECORD>
			<KEY>105_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Manipulate display characteristics of a graph</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>olegraph</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example uses OLE automation to change the type of graph and its legend displayed in a form.]]></DESCRIPT>
			<HELPID>1231536</HELPID>
		</RECORD>

		<RECORD>
			<KEY>106_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Provide a hierarchical display of items</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>outline</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates displaying file structures in a treeview control.]]></DESCRIPT>
			<HELPID>1231537</HELPID>
		</RECORD>

		<RECORD>
			<KEY>108_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Read ODBC Registry values</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>regodbc</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates reading information about ODBC drivers and datasources stored in the Windows Registry.]]></DESCRIPT>
			<HELPID>1231538</HELPID>
		</RECORD>

		<RECORD>
			<KEY>114_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Automate a Microsoft Excel spreadsheet</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>olexl</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates automating Excel for trend analysis and chart display.]]></DESCRIPT>
			<HELPID>1231539</HELPID>
		</RECORD>

		<RECORD>
			<KEY>115_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Refresh a graph in a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>stock</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using the DATA clause of the APPEND GENERAL command to refresh an MS Graph graph based on user interaction.]]></DESCRIPT>
			<HELPID>1231540</HELPID>
		</RECORD>

		<RECORD>
			<KEY>117_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Automate a Microsoft Word document in a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>oleword</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates how to add an OLE Control with an embedded Word object and change that object through OLE Automation.]]></DESCRIPT>
			<HELPID>1231541</HELPID>
		</RECORD>

		<RECORD>
			<KEY>120_</KEY>
			<PARENT>100_</PARENT>
			<TEXT>Nest transactions</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>transact</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using BEGIN TRANSACTION, END TRANSACTION, and ROLLBACK.]]></DESCRIPT>
			<HELPID>1231542</HELPID>
		</RECORD>

		<RECORD>
			<KEY>121_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Add a menu to an SDI form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>sdiform</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates displaying an SDI form, adding a menu to an SDI form, adding a toolbar to an SDI form, and displaying child windows in a form.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>122_</KEY>
			<PARENT>13_</PARENT>
			<TEXT>Views&#47;Queries</TEXT>
			<IMAGE>qpr</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>125_</KEY>
			<PARENT>46_</PARENT>
			<TEXT>Create small indexes using BINTOC( )</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>index1</FILE>
			<TYPE>F</TYPE>
			<PATH>db</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates the differences in size between various types of indexes on numeric and character fields.]]></DESCRIPT>
			<HELPID>1231543</HELPID>
		</RECORD>

		<RECORD>
			<KEY>128_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print a percent of total in a report</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>percent</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This report example illustrates how to calculate a percentage total within a detail or group section, using a total value that is printed in the report summary.
]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>132_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>Combo box</TEXT>
			<IMAGE>cbo</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>133_</KEY>
			<PARENT>132_</PARENT>
			<TEXT>Add new items to a combo box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>lookup</FILE>
			<TYPE>F</TYPE>
			<PATH>controls\combobox</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates adding the value typed in the textbox part of a combo box to the drop-down part of the combo box.  It further illustrates locating records based on user input.]]></DESCRIPT>
			<HELPID>1231545</HELPID>
		</RECORD>

		<RECORD>
			<KEY>134_</KEY>
			<PARENT>2_</PARENT>
			<TEXT>General</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>135_</KEY>
			<PARENT>134_</PARENT>
			<TEXT>Resize and reposition controls at run time</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>cresize</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The example illustrates using a class ("resizable" in SOLUTIONS.VCX) to resize and reposition specified objects on a form whenever the form is resized.]]></DESCRIPT>
			<HELPID>1231546</HELPID>
		</RECORD>

		<RECORD>
			<KEY>136_</KEY>
			<PARENT>134_</PARENT>
			<TEXT>Allow users to drag and drop controls</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>ddrop</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates implementing drag and drop operations -- repositioning a control with manual drag and drop, and taking an action with automatic drag and drop.]]></DESCRIPT>
			<HELPID>1231547</HELPID>
		</RECORD>

		<RECORD>
			<KEY>154_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Use the richtext control</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>rtf</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates setting the display characteristics of selected text in a RichText control.]]></DESCRIPT>
			<HELPID>1231548</HELPID>
		</RECORD>

		<RECORD>
			<KEY>155_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Forms</TEXT>
			<IMAGE>frm</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>158_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Form graphics</TEXT>
			<IMAGE>frm</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>159_</KEY>
			<PARENT>158_</PARENT>
			<TEXT>Draw lines and shapes on a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>fdmain</FILE>
			<TYPE>F</TYPE>
			<PATH>forms\graphics</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example allows you to draw lines and shapes on a form by clicking the left mouse button and dragging. You can also set pen styles and see how they affect drawing.]]></DESCRIPT>
			<HELPID>1231549</HELPID>
		</RECORD>

		<RECORD>
			<KEY>160_</KEY>
			<PARENT>158_</PARENT>
			<TEXT>Graph equations on a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>graph</FILE>
			<TYPE>F</TYPE>
			<PATH>forms\graphics</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example demonstrates drawing lines based on equations with both polar and cartesian coordinates.]]></DESCRIPT>
			<HELPID>1231550</HELPID>
		</RECORD>

		<RECORD>
			<KEY>161_</KEY>
			<PARENT>158_</PARENT>
			<TEXT>Display line animation on a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>anim</FILE>
			<TYPE>F</TYPE>
			<PATH>forms\graphics</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example demonstrates saving coordinates of sets of lines drawn on a form and redrawing them, along with additional lines at intermediate positions, giving the illusion of motion.]]></DESCRIPT>
			<HELPID>1231551</HELPID>
		</RECORD>

		<RECORD>
			<KEY>162_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Data entry</TEXT>
			<IMAGE>frm</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>163_</KEY>
			<PARENT>162_</PARENT>
			<TEXT>Create a single table data entry form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>single</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates adding, editing, and deleting records from a single table on a form.]]></DESCRIPT>
			<HELPID>1231552</HELPID>
		</RECORD>

		<RECORD>
			<KEY>164_</KEY>
			<PARENT>162_</PARENT>
			<TEXT>Create a 1-to-many data entry form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>many</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates adding, editing, and deleting records from tables in a relationship displayed on a form.]]></DESCRIPT>
			<HELPID>1231553</HELPID>
		</RECORD>

		<RECORD>
			<KEY>165_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Create an SDI form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>sdiform</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates displaying an SDI form, adding a menu to an SDI form, adding a toolbar to an SDI form, and displaying child windows in a form.]]></DESCRIPT>
			<HELPID>1231554</HELPID>
		</RECORD>

		<RECORD>
			<KEY>167_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Return a value from a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>logform</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates returning a value from a form.  A logon form is displayed.  When you close it, the user who logged on is returned to a calling form.]]></DESCRIPT>
			<HELPID>1231555</HELPID>
		</RECORD>

		<RECORD>
			<KEY>168_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Provide What&#39;s This help on a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>whatthis</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[What's This Help allows you to provide context-sensitive help on a control by control basis.  This example also illustrates using animated cursors in a drag and drop operation.]]></DESCRIPT>
			<HELPID>1231556</HELPID>
		</RECORD>

		<RECORD>
			<KEY>169_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Create a query by example form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>qbf</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates allowing a user to type a value in a text box associated with a table field and filter the table based on that value.]]></DESCRIPT>
			<HELPID>1231557</HELPID>
		</RECORD>

		<RECORD>
			<KEY>170_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Programmatically manipulate objects</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>objects</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates setting properties of objects in a form set at run time.  Please see the Visual FoxPro help topic "Creating Forms" for more information.]]></DESCRIPT>
			<HELPID>1231558</HELPID>
		</RECORD>

		<RECORD>
			<KEY>171_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Run multiple instances of a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>launch</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows running the same form multiple times and managing data conflicts in each instance.]]></DESCRIPT>
			<HELPID>1231559</HELPID>
		</RECORD>

		<RECORD>
			<KEY>173_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Use slider and status bar controls</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>slider</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates setting properties of the slider and statusBar OLE controls.]]></DESCRIPT>
			<HELPID>1231560</HELPID>
		</RECORD>

		<RECORD>
			<KEY>174_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Use conditional formatting in a report</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>colors</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example uses multiple field controls with different font and color settings to display information.  Conditions in the Print When dialog box determine when each of the field controls is displayed.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>175_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print an invoice</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>invoice</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates printing invoice information from multiple tables.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>176_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print report details in a ledger style</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>ledger</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates using Print When conditions in a report to print detail lines with alternating background fills.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>177_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print in catalog format</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>wrapping</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates wrapping text around general field bitmaps, alternating display of bitmaps, and using lines and shapes to print records in an attractive layout.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>178_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from both inner and outer joins</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>comboj</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This query retrieves customer names, associated order numbers, and all the line items associated with each order.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>179_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from a full outer join</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>fouterj</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[A full outer join allows you to retrieve all records from both tables and shows you all the matching records first, then records with .NULL. values where a match was not found in the other table.
]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>180_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from an inner join</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>innerj</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The query retrieves only records from two related tables that match the join criteria.  Any row from one table that does not have a matching row in the other table is not included.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>181_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from a nested join</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>nested</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This query retrieves records from tables joined with two inner joins.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>182_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from a right outer join</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>routerj</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[A right outer join retrieves all records from the table on the right side of the join criteria and only records that match the join criteria from the table on the left side of the join criteria.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>183_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select records from a left outer join</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>louterj</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[A left outer join retrieves all records from the table on the left side of the join criteria and only records that match the join criteria from the table on the right side of the join criteria.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>184_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Interactively build a SELECT statement</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>makesql</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates taking data from combo boxes and text boxes and constructing a SQL SELECT statement.]]></DESCRIPT>
			<HELPID>1231571</HELPID>
		</RECORD>

		<RECORD>
			<KEY>185_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Play multimedia files using MCI commands</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>mci_play</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example illustrates playing sound a video files using Multimedia Control Interface commands of the Windows API.]]></DESCRIPT>
			<HELPID>1231572</HELPID>
		</RECORD>

		<RECORD>
			<KEY>186_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Display system information</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>sysinfo</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample uses the ActiveX SysInfo control to display system information.]]></DESCRIPT>
			<HELPID>1231573</HELPID>
		</RECORD>

		<RECORD>
			<KEY>188_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select the top ten best selling products</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>topten</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This query uses the Top N feature to retrieve the top ten best selling products based on total dollar amount made through sales.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>189_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select the ten worst selling products</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>worstten</FILE>
			<TYPE>Q</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This query uses the Top N feature to retrieve the worst ten selling products based on total dollar amount made through sales.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>190_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Pass parameters between forms</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>param</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how to pass parameters to a form and return a value back from another form.]]></DESCRIPT>
			<HELPID>1231576</HELPID>
		</RECORD>

		<RECORD>
			<KEY>191_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print customer mailing labels</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>cust.lbx</FILE>
			<TYPE>R</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This Customer mailing label shows how to set up a typical mailing label report.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>192_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Display pictures in an image control</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>image</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows the different characteristics of the image control.]]></DESCRIPT>
			<HELPID>1231578</HELPID>
		</RECORD>

		<RECORD>
			<KEY>193_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Automate Microsoft Word and Excel</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>oleaut1</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how to pass data from VFP to Excel.  You must have both Word and Excel installed.]]></DESCRIPT>
			<HELPID>1231579</HELPID>
		</RECORD>

		<RECORD>
			<KEY>194_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Display shortcut menus</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>shortcut</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how you can develop shortcut menus to speed access to commonly used functionality.]]></DESCRIPT>
			<HELPID>1231580</HELPID>
		</RECORD>

		<RECORD>
			<KEY>195_</KEY>
			<PARENT>6_</PARENT>
			<TEXT>Change font attributes</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>format</FILE>
			<TYPE>F</TYPE>
			<PATH>toolbars</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how you can create a toolbar that interacts with objects on a form.]]></DESCRIPT>
			<HELPID>1231581</HELPID>
		</RECORD>

		<RECORD>
			<KEY>196_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Send mail</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>sendmail</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how to use MAPI within your applications.]]></DESCRIPT>
			<HELPID>1231582</HELPID>
		</RECORD>

		<RECORD>
			<KEY>197_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Customize the open dialog box</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>commdlog</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows using the ActiveX common dialog control.]]></DESCRIPT>
			<HELPID>1231583</HELPID>
		</RECORD>

		<RECORD>
			<KEY>198_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>Get Version Information</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>getver</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows how to retrieve version information from EXE and DLL files.]]></DESCRIPT>
			<HELPID>1231584</HELPID>
		</RECORD>

		<RECORD>
			<KEY>199_</KEY>
			<PARENT>132_</PARENT>
			<TEXT>Allow users to choose list values</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>datalook</FILE>
			<TYPE>F</TYPE>
			<PATH>forms</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample allows users to choose a predetermined value from a list and store that value to a field in a table.]]></DESCRIPT>
			<HELPID>1231585</HELPID>
		</RECORD>

		<RECORD>
			<KEY>200_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Create dynamic shortcut menus</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dynshort</FILE>
			<TYPE>F</TYPE>
			<PATH>menus</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample illustrates an alternative way to display shortcut menus, using an array and the DEFINE POPUP command rather than the Menu Designer.]]></DESCRIPT>
			<HELPID>1231586</HELPID>
		</RECORD>

		<RECORD>
			<KEY>201_</KEY>
			<PARENT>103_</PARENT>
			<TEXT>Print product orders by quarter</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>ordgraph</FILE>
			<TYPE>F</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample allows you to choose a year and a quarter.  You can then display a graph of the product sales for that quarter in the form and in a report.]]></DESCRIPT>
			<HELPID>1231587</HELPID>
		</RECORD>

		<RECORD>
			<KEY>202_</KEY>
			<PARENT>101_</PARENT>
			<TEXT>Play an AVI file in an ActiveX control</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>mmsample</FILE>
			<TYPE>F</TYPE>
			<PATH>ole</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample uses a custom ActiveX® Control (Paper.OCX, created using Visual C++ 4.1 and the Ole Control Wizard) to demonstrate the MultiMedia Player control playing an AVI.
]]></DESCRIPT>
			<HELPID>1231588</HELPID>
		</RECORD>

		<RECORD>
			<KEY>203_</KEY>
			<PARENT>122_</PARENT>
			<TEXT>Select customers in a specific country</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>customers in specific country</FILE>
			<TYPE>V</TYPE>
			<PATH>..\data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This parameterized view displays customers from the country you specify.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>204_</KEY>
			<PARENT>4_</PARENT>
			<TEXT>Print data dictionary information</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dbctofrx</FILE>
			<TYPE>F</TYPE>
			<PATH>reports</PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID>1231590</HELPID>
		</RECORD>

		<RECORD>
			<KEY>205_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Foundation Classes</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>206_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Run Word, Excel and Graph automation</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>automate</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This samples uses automation classes to create Word mail merges, Excel pivot tables, Graph charts and Visual FoxPro cross-tabs.]]></DESCRIPT>
			<HELPID>1231592</HELPID>
		</RECORD>

		<RECORD>
			<KEY>207_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add miscellaneous form buttons</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>buttons</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add a variety of common buttons such as a help or application launcher button to your form.]]></DESCRIPT>
			<HELPID>1231593</HELPID>
		</RECORD>

		<RECORD>
			<KEY>208_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Handle data conflicts</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>conflicts</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use a nifty conflict resolution dialog to display old, current and new data values for the user to resolve.]]></DESCRIPT>
			<HELPID>1231594</HELPID>
		</RECORD>

		<RECORD>
			<KEY>209_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add data-bound calendar</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>datacal</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use this ActiveX Control calendar to bind a Date field.]]></DESCRIPT>
			<HELPID>1231595</HELPID>
		</RECORD>

		<RECORD>
			<KEY>210_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use edit buttons for a complex form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dataedit</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add wizard style edit buttons to 1-to-many relationship complex forms.]]></DESCRIPT>
			<HELPID>1231596</HELPID>
		</RECORD>

		<RECORD>
			<KEY>211_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use edit buttons for a simple form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dataedit2</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add wizard style edit buttons to simple single table forms.]]></DESCRIPT>
			<HELPID>1231597</HELPID>
		</RECORD>

		<RECORD>
			<KEY>212_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add data-lookup combo boxes</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>datalook2</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use data lookup and unique value comboboxes to help users selecting data.]]></DESCRIPT>
			<HELPID>1231598</HELPID>
		</RECORD>

		<RECORD>
			<KEY>213_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add navigation to forms</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>datanav</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample has various types of record navigation including VCR style buttons and goto dialogs.]]></DESCRIPT>
			<HELPID>1231599</HELPID>
		</RECORD>

		<RECORD>
			<KEY>214_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add data querying to forms</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dataqry</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can add data querying to your applications such as via find buttons and dialogs.]]></DESCRIPT>
			<HELPID>1231600</HELPID>
		</RECORD>

		<RECORD>
			<KEY>215_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add data sorting and filtering to forms</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>datasort</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add data sorting and filtering buttons, toolbars, menus and dialogs your applications.]]></DESCRIPT>
			<HELPID>1231600</HELPID>
		</RECORD>

		<RECORD>
			<KEY>216_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use common application dialog boxes</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dialogs</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows a variety of common dialogs you might use in your application including aboutbox, splash screen, and user login forms.]]></DESCRIPT>
			<HELPID>1231602</HELPID>
		</RECORD>

		<RECORD>
			<KEY>217_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Generate HTML</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dohtml</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Take advantage of the internet with this sample that shows how you can easily publish Visual FoxPro data.]]></DESCRIPT>
			<HELPID>1231603</HELPID>
		</RECORD>

		<RECORD>
			<KEY>218_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Handle application environment tasks</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>environ</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows a number of common environment tasks that all applications need.]]></DESCRIPT>
			<HELPID>1231604</HELPID>
		</RECORD>

		<RECORD>
			<KEY>219_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Application error handling</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>error</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This is a nice little error handler for your application which also includes capabililty for user to view error and add notes.]]></DESCRIPT>
			<HELPID>1231605</HELPID>
		</RECORD>

		<RECORD>
			<KEY>220_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Retrieve project location and name</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>getproject</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can use this control to allow a user to select both file and directory such as for creating a new project.]]></DESCRIPT>
			<HELPID>1231606</HELPID>
		</RECORD>

		<RECORD>
			<KEY>221_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Create record-bound graphs</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>graphrec</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Take the hastle out of creating charts which are bound to fields in a single record. This sample also includes record navigation and automatic chart updating.]]></DESCRIPT>
			<HELPID>1231607</HELPID>
		</RECORD>

		<RECORD>
			<KEY>222_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add web hyperlinks to a form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>hyperlnk</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example shows a variety of hyperlinks you can use with forms for navigating via your web browser to any web site (URL).]]></DESCRIPT>
			<HELPID>1231608</HELPID>
		</RECORD>

		<RECORD>
			<KEY>223_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Create &quot;coolbar&quot; control effects</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>mousefx</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add "coolbar" highlighting to any Visual FoxPro control like with the Internet Explorer coolbar.]]></DESCRIPT>
			<HELPID>1231609</HELPID>
		</RECORD>

		<RECORD>
			<KEY>224_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use mover list boxes for selecting data</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>movers</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows a number of useful mover listboxes for moving items between one list and another. It includes useful ones for handling tables and fields.]]></DESCRIPT>
			<HELPID>1231610</HELPID>
		</RECORD>

		<RECORD>
			<KEY>225_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add shortcut menus to objects</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>newmenu</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use this valuable shortcut menu class to add a context menu to any Visual FoxPro object. You can also create cascading menus with it.]]></DESCRIPT>
			<HELPID>1231611</HELPID>
		</RECORD>

		<RECORD>
			<KEY>226_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Display data reporting output options</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>output</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows off one of the most useful foundation classes, the OutputDialog class. You can use this for offering your user a variety of output/reporting options.]]></DESCRIPT>
			<HELPID>1231612</HELPID>
		</RECORD>

		<RECORD>
			<KEY>227_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use progress thermometer</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>therm</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Show activity progress with this thermometer class that mimics those used by the Visual FoxPro product.]]></DESCRIPT>
			<HELPID>1231613</HELPID>
		</RECORD>

		<RECORD>
			<KEY>228_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Create a Visual FoxPro web browser</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>webvwr</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Add the web browser control to your form to simulate having a fully functional web browser done in Visual FoxPro.]]></DESCRIPT>
			<HELPID>1231614</HELPID>
		</RECORD>

		<RECORD>
			<KEY>229_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Handle common windowing tasks</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>whandler</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can handle top-level form tasks and cascading windows with this utility.]]></DESCRIPT>
			<HELPID>1231615</HELPID>
		</RECORD>

		<RECORD>
			<KEY>230_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Use array handling</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>arrays</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows advanced array handling for your application.]]></DESCRIPT>
			<HELPID>1231616</HELPID>
		</RECORD>

		<RECORD>
			<KEY>232_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Projects</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>233_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Programming</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>235_</KEY>
			<PARENT>24_</PARENT>
			<TEXT>Treeview&#47;Listbox drag and drop</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>listdd</FILE>
			<TYPE>F</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Here are two similarly functioning controls, each with a different interface, showing off OLE drag and drop.]]></DESCRIPT>
			<HELPID>1231621</HELPID>
		</RECORD>

		<RECORD>
			<KEY>236_</KEY>
			<PARENT>233_</PARENT>
			<TEXT>Fun with OLE drag and drop</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>oledd</FILE>
			<TYPE>F</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Here is a sampling of fun OLE drag and drap ideas you might want to use in an application.]]></DESCRIPT>
			<HELPID>1231622</HELPID>
		</RECORD>

		<RECORD>
			<KEY>237_</KEY>
			<PARENT>233_</PARENT>
			<TEXT>OLE drag and drop data formats</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>querydd</FILE>
			<TYPE>F</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample is a useful utility for detemining data formats that a particular objects support. In addition to the samples on the form, you can also drag/drop from outside sources such as the Windows Explorer.]]></DESCRIPT>
			<HELPID>1231623</HELPID>
		</RECORD>

		<RECORD>
			<KEY>238_</KEY>
			<PARENT>68_</PARENT>
			<TEXT>View type library information</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>typelib</FILE>
			<TYPE>F</TYPE>
			<PATH>winapi</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This samples shows the Visual FoxPro type library control which can be used to read type libraries from any COM component or ActiveX control.]]></DESCRIPT>
			<HELPID>1231591</HELPID>
		</RECORD>

		<RECORD>
			<KEY>239_</KEY>
			<PARENT>233_</PARENT>
			<TEXT>Fun with Access&#47;Assign methods</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>aa_fun</FILE>
			<TYPE>F</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[An assortment of access/assign methods used for various features including validation, object management and audit tracking.]]></DESCRIPT>
			<HELPID>1231617</HELPID>
		</RECORD>

		<RECORD>
			<KEY>241_</KEY>
			<PARENT>232_</PARENT>
			<TEXT>Track activities in a project</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>acttrack</FILE>
			<TYPE>F</TYPE>
			<PATH>tahoe</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The new project manager hooks allow you to include track events associated with the project such as adding,  modifying, deleting files and building applications. This sample keeps an audit trail of this activity.]]></DESCRIPT>
			<HELPID>1231620</HELPID>
		</RECORD>

		<RECORD>
			<KEY>242_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Working with Microsoft Agent</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>agent</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The Microsoft Agent technology can provide valuable user assistance to your applications similarly to the Office Assistant.]]></DESCRIPT>
			<HELPID>1231624</HELPID>
		</RECORD>

		<RECORD>
			<KEY>243_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Expanding the SetAll method</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>setallx</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This special class offers some additional features that the native SetAll() method does not provide.]]></DESCRIPT>
			<HELPID>1231626</HELPID>
		</RECORD>

		<RECORD>
			<KEY>244_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Using regular expressions</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>regexp</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Regular expressions are used by developers to do wildcard searches on text and files beyond simple pattern searching such as those involving * and ?.]]></DESCRIPT>
			<HELPID>1231627</HELPID>
		</RECORD>

		<RECORD>
			<KEY>245_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Tips for the Windows Logo program</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>logo</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The Windows Logo program can be a useful selling feature of your product, especially with customers that may be require this certification.]]></DESCRIPT>
			<HELPID>1231628</HELPID>
		</RECORD>

		<RECORD>
			<KEY>247_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Add encryption to applications</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>crypto</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The Windows Crypto API routines offer full encryption services for your applications. This VFP wrapper class allows you to encrypt text, files and even database fields.]]></DESCRIPT>
			<HELPID>1231629</HELPID>
		</RECORD>

		<RECORD>
			<KEY>250_</KEY>
			<PARENT>134_</PARENT>
			<TEXT>Hot tracking and hover effects</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dvds</FILE>
			<TYPE>F</TYPE>
			<PATH>sedona</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Visual FoxPro has property settings to allow for hot tracking and other special effects. The new MouseEnter/MouseLeave events provide additional fine control for these types of operations.]]></DESCRIPT>
			<HELPID>1231671</HELPID>
		</RECORD>

		<RECORD>
			<KEY>251_</KEY>
			<PARENT>3_</PARENT>
			<TEXT>Add personalized menus</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>mrumenu</FILE>
			<TYPE>F</TYPE>
			<PATH>sedona</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Enhancements to the DEFINE BAR command in VFP let you add personalized menus similarly to Windows 2000 or Office 2000. You can control which menu items are viewed by default and which are hidden.]]></DESCRIPT>
			<HELPID>1231672</HELPID>
		</RECORD>

		<RECORD>
			<KEY>252_</KEY>
			<PARENT>155_</PARENT>
			<TEXT>Transparent forms</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>fadeaway</FILE>
			<TYPE>F</TYPE>
			<PATH>sedona</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Windows 2000 lets you add special effects to your forms such as making them Transparent.]]></DESCRIPT>
			<HELPID>1231673</HELPID>
		</RECORD>

		<RECORD>
			<KEY>253_</KEY>
			<PARENT>6_</PARENT>
			<TEXT>Use new style toolbars</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>newtbars</FILE>
			<TYPE>F</TYPE>
			<PATH>sedona</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can use VFP control properties to add Office style controls to toolbars such as a picture dropdown in this sample.]]></DESCRIPT>
			<HELPID>1231674</HELPID>
		</RECORD>

		<RECORD>
			<KEY>254_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>New in Visual FoxPro 8.0</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>255_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Grid Highlighting, Auto Fit and Image Headers</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>griders</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows some of the new grid enhancements in VFP 8.0 including new grid highlighting options, auto fit of columns and using image headers.]]></DESCRIPT>
			<HELPID>1231676</HELPID>
		</RECORD>

		<RECORD>
			<KEY>256_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Windows XP themes support</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>themes</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Visual FoxPro supports XP themes at three different levels; 1) the Application level via SYS(2700) and the _SCREEN.Themes property, 2) at the form level via the Themes property, and 3) at the control level. Run this sample to play with the different levels of VFP themes support.]]></DESCRIPT>
			<HELPID>1231677</HELPID>
		</RECORD>

		<RECORD>
			<KEY>257_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Structured exception handling</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>trycatch</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can use the TRY...CATCH...FINALLY statements for structured exception handling. This allows you to execute a particular block of statements if a specified exception occurs while your code is running. Run this sample to see structured exception handling in action.]]></DESCRIPT>
			<HELPID>1231678</HELPID>
		</RECORD>

		<RECORD>
			<KEY>258_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Member classes</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>frmmember</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[VFP 8.0 allows you to specify member classes for Pageframes, Optiongroups, Commandgroups, Grids, and Columns. You can also now subclass page, optionbutton, header, and column classes. Take a look at how this sample uses PRG-based and VCX-based member classes.]]></DESCRIPT>
			<HELPID>1231679</HELPID>
		</RECORD>

		<RECORD>
			<KEY>259_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>BindEvents(), RaiseEvents() and Aevents()</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>frmevents</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows you how to use the BindEvents(), RaiseEvents() and Aevents() functions. Use BindEvents() so that your methods can respond to Visual FoxPro events and RaiseEvents() to programatically raise them.]]></DESCRIPT>
			<HELPID>1231680</HELPID>
		</RECORD>

		<RECORD>
			<KEY>260_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Creating Irregularly shaped windows</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>irregular</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows how you can create irregular shaped Visual FoxPro forms in Windows 2000 and WindowsXP.]]></DESCRIPT>
			<HELPID>1231681</HELPID>
		</RECORD>

		<RECORD>
			<KEY>261_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Loading and generating XML using XMLAdapter class</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>xmladapter</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The XMLAdapter is a class that has the ability to generate XML from multiple cursors. It can also recreate multiple cursors from XML, such as ADO.NET datasets. This sample demonstrates some of the many uses of this class.]]></DESCRIPT>
			<HELPID>1231682</HELPID>
		</RECORD>

		<RECORD>
			<KEY>262_</KEY>
			<PARENT>13_</PARENT>
			<TEXT>DBC Events</TEXT>
			<IMAGE>db</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>263_</KEY>
			<PARENT>205_</PARENT>
			<TEXT>Using the _PoolManager FFC class</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>_poolmanager</FILE>
			<TYPE>F</TYPE>
			<PATH>ffc</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use the _PoolManager class when you repeatedly need objects for a limited period of time and those objects are slow to create or require access to time-consuming or limited resources such as database connections. This class uses the VFP Collection base class to store the object references.]]></DESCRIPT>
			<HELPID>1231684</HELPID>
		</RECORD>

		<RECORD>
			<KEY>264_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>SCATTER NAME... ADDITIVE</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>scattername</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample saves and restores some form properties to and from a table using GATHER NAME and the new SCATTER NAME ... ADDITIVE enhancement.  The ADDITIVE clause allows for an existing object to be updated with values from the current record.]]></DESCRIPT>
			<HELPID>1231685</HELPID>
		</RECORD>

		<RECORD>
			<KEY>265_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Using COMARRAY and strongly typed arrays</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>comarraydemo</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample uses the COMARRAY function in order to pass a strongly typed array by reference to a COM Server which performs calculations and modifies the contents of the array.  The client form uses the new DIMENSION... AS syntax for declaring the strongly typed array. The COM Server is also written in VFP and demonstrates the new interface declaration syntax for specifying ByRef typed arrays in the generated COM type library.]]></DESCRIPT>
			<HELPID>1231686</HELPID>
		</RECORD>

		<RECORD>
			<KEY>266_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>System Tray Icon example</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>systray_sample</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample form shows some common uses of the sample Systray class. This class provides support for using icons in the Taskbar Notification Area commonly referred to as the System Tray. It supports mouse events, balloon tips and Visual FoxPro shortcut menus for your System Tray icon so you can use all the features of the Visual FoxPro menu designer.
]]></DESCRIPT>
			<HELPID>1231687</HELPID>
		</RECORD>

		<RECORD>
			<KEY>267_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>VFP&#47;VB.NET XML Web Service samples</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>readme.htm</FILE>
			<TYPE>S</TYPE>
			<PATH>..\Webservices\Northwind</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows different architectures for exchanging datasets between a VFP client and a middle tier written in VFP and VB.NET using XML Web Services.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>268_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Managing data access using CursorAdapters</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>casample</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample showcases three cursor adapters built with the CursorAdapter Builder with different datasource types; Native, ODBC, and ADO. The ODBC and ADO cursor adapters attempt to attach to your local SQL-Server Northwind database. If you have this database installed, you will be able to see these cursor adapters in action at runtime.]]></DESCRIPT>
			<HELPID>1231689</HELPID>
		</RECORD>

		<RECORD>
			<KEY>269_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Creating a cursor from an XML Dataset</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>caxml</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows how to create a cursor from an XML dataset using the CursorAdapter and XMLAdapter classes and how to bind that data to form controls.]]></DESCRIPT>
			<HELPID>1231690</HELPID>
		</RECORD>

		<RECORD>
			<KEY>270_</KEY>
			<PARENT>254_</PARENT>
			<TEXT>Controlling MSN Messenger</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>messenger</FILE>
			<TYPE>F</TYPE>
			<PATH>toledo</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample demonstrates how to perform operations against MSN Messenger using the Messenger API and Windows Scripting Host. You can use these methods to automate sending of messages, email and files to any MSN user from your processes.]]></DESCRIPT>
			<HELPID>1231691</HELPID>
		</RECORD>

		<RECORD>
			<KEY>271_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>New in Visual FoxPro 9.0</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>272_</KEY>
			<PARENT>0_</PARENT>
			<TEXT>Sample Data</TEXT>
			<IMAGE>cmd</IMAGE>
			<FILE></FILE>
			<TYPE>N</TYPE>
			<PATH></PATH>
			<METHOD></METHOD>
			<DESCRIPT></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>273_</KEY>
			<PARENT>272_</PARENT>
			<TEXT>Tastrade Database</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>Tastrade</FILE>
			<TYPE>D</TYPE>
			<PATH>..\Tastrade\Data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Visual FoxPro Tastrade Database.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>274_</KEY>
			<PARENT>272_</PARENT>
			<TEXT>Testdata Database</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>Testdata</FILE>
			<TYPE>D</TYPE>
			<PATH>..\Data</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Simple sample database for testing.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>249_</KEY>
			<PARENT>262_</PARENT>
			<TEXT>Using DBC events</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dbcevents</FILE>
			<TYPE>F</TYPE>
			<PATH>sedona</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Visual FoxPro has support for DBC events that allow you to have code executed for actions such as opening tables, modifying views, closing databases, etc.]]></DESCRIPT>
			<HELPID>1231670</HELPID>
		</RECORD>

		<RECORD>
			<KEY>275_</KEY>
			<PARENT>272_</PARENT>
			<TEXT>Northwind Database</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>Northwind</FILE>
			<TYPE>D</TYPE>
			<PATH>..\Northwind</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This is the Visual FoxPro version of the common Northwind sample database available with SQL Server.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>276_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Anchors Away</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>anchors_away</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[The new Anchor property allows you to choose which borders a visual control on a form is bound to when that form is resized. This sample shows many common anchor settings.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>277_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Dockable Image Viewer</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dockingforms</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample uses a dockable form that contains an invisible pageframe. The active page is set by the AfterDock event when the form is docked and undocked.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>278_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Fun with polygons</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>polygons</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can use the new Polypoints property to create polygons and polylines with shape and line controls.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>279_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Control button caption and image placement</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>buttons</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample explores the various properties that can be used to control image and caption placement / orientation for buttons and checkboxes.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>280_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Fox Media Player</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>foxmedia</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[A fun sample that uses the Windows Media Player Activex Control to play music and display visualization on your Visual FoxPro desktop. This sample also uses Anchoring so that you can resize the desktop and have media player resize with it.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>281_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>BINTOC binary conversion</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>binary</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can now use BINTOC() and CTOBIN() when converting between numeric data and binary strings. This is often useful when working with Win32 API Structs. This utility shows various BINTOC() and CTOBIN() return values based on parameters being passed.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>282_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Utility to scan for Memo corruption</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>scanmemo</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can use this utility to scan folders (and subfolders) for corrupted Memo fields in your Visual FoxPro files.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>283_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Create column chart reports using GDI+</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>columnchartreports</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows how GDI+ can be used in a ReportListener to replace a shape object with column chart.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>284_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Dynamic formatting using ReportListeners</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>dynamicformatting</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows how to use the EvaluateContents method of a ReportListener class to change the format of a report field.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>285_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>HTML, XML and TIFF output with ReportListeners</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>htmlxmloutput</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Use ReportListeners to generate different output types for your reports including HTML, XML and TIFF.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>286_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>The typical multiple detail band report</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>multipledetail1</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This example show the typical use of a multiple detail band report -- ability to print detail from multiple child tables each having the same parent table.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>287_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>A multiple detail band report used for calculations</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>multipledetail2</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can also use a multiple detail band report to process the same table mutiple times such as for calculations like percent of total.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>288_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Report to several outputs simultaneously using a ReportListener</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>multipleoutput</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[With the _ReportListener FFC class, you can have your report processed to mutiple output destinations.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>289_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Control preview window for your report</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>controlpreview</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[With Visual FoxPro 9, you can use a simple form to preview a report.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>290_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Foxcode menu scripts</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>menuhit</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[You can create special scripts in your Foxcode IntelliSense table to provide custom handling for native and context menus.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>291_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Add a custom report previewer in your form</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>custompreview</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This sample shows how you can preview reports directly in your Visual FoxPro forms.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>292_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Coverage Profiler Performance Add-In</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>solutioncovaddin</FILE>
			<TYPE>F</TYPE>
			<PATH>coverage</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[This is a useful add-in for the Coverage Profiler utility that allows you to identify areas in your code where you might want to improve performance. It allows you to view, sort and search lines of code based on their execution times.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

		<RECORD>
			<KEY>293_</KEY>
			<PARENT>271_</PARENT>
			<TEXT>Binding to Windows Message events</TEXT>
			<IMAGE>dot</IMAGE>
			<FILE>windowsevents</FILE>
			<TYPE>F</TYPE>
			<PATH>europa</PATH>
			<METHOD></METHOD>
			<DESCRIPT><![CDATA[Visual FoxPro allows you to use the BINDEVENT() function to bind to Windows Message events. These include events such as application switching, inserting media into your computer, attempting to shutdown or place computer in stand-by mode, file/folder changes and many more.]]></DESCRIPT>
			<HELPID></HELPID>
		</RECORD>

	</RECORDS>


</TABLE>

