*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="columnchartreports.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmsolution1 AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboView" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*a: aviews[1,0]
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	BorderStyle = 2
	Caption = "Creating Column Chart Reports Using GDI+"
	DoCreate = .T.
	Height = 178
	Name = "Frmsolution1"
	Width = 455
	_memberdata = <VFPData>
		<memberdata name="aviews" type="property" display="aViews"/>
		</VFPData>		&& XML Metadata for customizable properties
	Behindscenes1.Left = 12
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.TabIndex = 8
	Behindscenes1.Top = 144
	Cmdclose1.Height = 23
	Cmdclose1.HelpContextID = 0
	Cmdclose1.Left = 348
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 10
	Cmdclose1.Top = 144
	Cmdclose1.Width = 96
	C_solutions1.Left = 48
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 144
	label1.Anchor = 130
	label1.Caption = "This sample shows how GDI+ can be used in a ReportListener to replace a shape object with a column chart."
	label1.Height = 48
	label1.Left = 24
	label1.Name = "label1"
	label1.TabIndex = 2
	label1.Top = 25
	label1.Width = 408
	Label4.Alignment = 2
	Label4.AutoSize = .F.
	Label4.Height = 15
	Label4.Left = 25
	Label4.Name = "Label4"
	Label4.TabIndex = 1
	Label4.Top = 6
	Label4.Width = 68
	Shape2.Anchor = 130
	Shape2.Height = 84
	Shape2.Left = 12
	Shape2.Name = "Shape2"
	Shape2.Top = 12
	Shape2.Width = 432

	ADD OBJECT 'cboView' AS combobox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 22, ;
		Left = 60, ;
		Name = "cboView", ;
		RowSource = "Thisform.aViews", ;
		RowSourceType = 5, ;
		Style = 2, ;
		TabIndex = 5, ;
		Top = 115, ;
		Width = 165
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "Preview Report", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 246, ;
		Name = "Command1", ;
		TabIndex = 6, ;
		Top = 115, ;
		Width = 96
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		Caption = "View Report", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 348, ;
		Name = "Command2", ;
		TabIndex = 7, ;
		Top = 115, ;
		Width = 96
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		Caption = "View Code", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 246, ;
		Name = "Command3", ;
		TabIndex = 9, ;
		Top = 144, ;
		Width = 96
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label2' AS label WITH ;
		Anchor = 130, ;
		BackStyle = 0, ;
		Caption = "Select the view from the Northwind database you wish to create a chart from, then click on the Preview Report button to run the report for that view.", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 36, ;
		Left = 24, ;
		Name = "Label2", ;
		TabIndex = 3, ;
		Top = 60, ;
		Width = 408, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "View:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 28, ;
		Name = "Label3", ;
		TabIndex = 4, ;
		Top = 118, ;
		Width = 28
		*< END OBJECT: BaseClass="label" />
	
	PROCEDURE Destroy
		* Clean up.
		
		close databases
		
	ENDPROC

	PROCEDURE Init
		WITH THIS
		
			* Do the usual stuff.
		
			DODEFAULT()
			SET SAFETY OFF
		
			* Define an array of views and the fields we'll chart for each.
		
			DIMENSION .aViews[3, 2]
			.aViews[1, 1] = 'Category_Sales_For_1997'
			.aViews[1, 2] = 'CategoryName,CategorySales'
			.aViews[2, 1] = 'Product_Sales_For_1997'
			.aViews[2, 2] = 'ProductName,ProductSales'
			.aViews[3, 1] = 'Summary_Of_Sales_By_Year'
			.aViews[3, 2] = 'Year,Total'
			.cboView.REQUERY()
			.cboView.LISTINDEX = 1
		
			* Open the Northwind database.
		
			OPEN DATABASE ADDBS(HOME()) + 'Samples\Northwind\Northwind'
		ENDWITH
		
	ENDPROC

	PROCEDURE Command1.Click
		LOCAL lcDirectory, ;
			lcTempFRX, ;
			laFields[1], ;
			lcView, ;
			loListener
		
		WAIT WINDOW 'Processing...' NOWAIT NOCLEAR
		* Copy the report and change the fields being charted. The textbox with "LABEL"
		* in USER contains the field to use for the labels for the chart and the one
		* with "DATA" is used as the values for the chart.
		
		lcDirectory = SYS(16)
		lcDirectory = ADDBS(JUSTPATH(SUBSTR(lcDirectory, AT(' ', lcDirectory, 2) + 1)))
		lcTempFRX   = FORCEPATH('ColumnChartSample.FRX', SYS(2023))
		
		USE FORCEPATH('ColumnChartSample.FRX', lcDirectory)
		COPY TO (lcTempFRX)
		USE (lcTempFRX)
		ALINES(laFields, THISFORM.aViews[Thisform.cboView.ListIndex, 2], .T., ',')
		LOCATE FOR USER = 'LABEL'
		REPLACE EXPR WITH laFields[1]
		LOCATE FOR USER = 'DATA'
		REPLACE EXPR WITH laFields[2]
		USE
		
		* Open the data for the report. We'll only grab to top 16 records to avoid size
		* issues with the chart.
		
		lcView = THISFORM.aViews[Thisform.cboView.ListIndex, 1]
		SELECT TOP 16 * FROM (lcView) ORDER BY 2 INTO CURSOR Temp
		
		* Create the listener and run the report.
		
		loListener = NEWOBJECT('ColumnChartListener', ;
			FORCEPATH('ColumnChartListener.prg', lcDirectory))
		loListener.OUTPUTTYPE = 1
		
		REPORT FORM (lcTempFRX) OBJECT loListener
		
		* Clean up.
		
		CLOSE TABLES ALL
		ERASE (lcTempFRX)
		WAIT CLEAR
		
	ENDPROC

	PROCEDURE Command2.Click
		local lcDirectory, lnSession
		lcDirectory = sys(16)
		lcDirectory = addbs(justpath(substr(lcDirectory, at(' ', lcDirectory, 2) + 1)))
		lnSession=SET("Datasession")
		modify report (forcepath('ColumnChartSample.FRX', lcDirectory))
		SET DATASESSION TO lnSession
		
	ENDPROC

	PROCEDURE Command3.Click
		local lcDirectory
		lcDirectory = sys(16)
		lcDirectory = addbs(justpath(substr(lcDirectory, at(' ', lcDirectory, 2) + 1)))
		modify command forcepath('ColumnChartListener.prg', lcDirectory)
		
	ENDPROC

	PROCEDURE Label4.Refresh
		this.BackColor = this.Parent.backcolor
		
		
	ENDPROC

ENDDEFINE
