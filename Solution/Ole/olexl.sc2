*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="olexl.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS datanavigation AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Name = "Datanavigation"

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shape4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdChart" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Behindscenes1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="C_solutions1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSheet" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdclose1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />

	AutoCenter = .T.
	Caption = "Automate a Microsoft Excel Spreadsheet"
	DataSession = 2
	DoCreate = .T.
	Height = 232
	HelpContextID = 1231539
	MaxButton = .F.
	MinButton = .T.
	Name = "Form1"
	Width = 383

	ADD OBJECT 'Behindscenes1' AS behindscenes WITH ;
		Left = 12, ;
		Name = "Behindscenes1", ;
		TabIndex = 3, ;
		Top = 203
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'C_solutions1' AS c_solutions WITH ;
		Height = 18, ;
		Left = 62, ;
		Name = "C_solutions1", ;
		Top = 205, ;
		Width = 25
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="custom" />

	ADD OBJECT 'cmdChart' AS commandbutton WITH ;
		Caption = "Example \<2", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 293, ;
		Name = "cmdChart", ;
		TabIndex = 2, ;
		Top = 165, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Cmdclose1' AS cmdclose WITH ;
		Height = 23, ;
		Left = 301, ;
		Name = "Cmdclose1", ;
		TabIndex = 4, ;
		Top = 203, ;
		Width = 72
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSheet' AS commandbutton WITH ;
		Caption = "Example \<1", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 293, ;
		Name = "cmdSheet", ;
		TabIndex = 1, ;
		Top = 80, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label1' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Example 1: Trend ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 19, ;
		Name = "Label1", ;
		TabIndex = 0, ;
		Top = 64, ;
		Width = 91
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label2' AS label WITH ;
		Caption = "This example sends the results of a crosstab query to Microsoft Excel to calculate sales trends for products in the TESTDATA database. The trend information is retrieved from Excel.", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 56, ;
		Left = 20, ;
		Name = "Label2", ;
		TabIndex = 0, ;
		Top = 80, ;
		Width = 262, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Example 2: Chart ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 19, ;
		Name = "Label3", ;
		TabIndex = 0, ;
		Top = 148, ;
		Width = 88
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label4' AS label WITH ;
		Caption = "This example sends some sample data to Microsoft Excel and creates a bar chart of the data.", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 26, ;
		Left = 20, ;
		Name = "Label4", ;
		TabIndex = 0, ;
		Top = 164, ;
		Width = 261, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		Caption = "You can control other applications, such as Microsoft Excel, with OLE Automation.", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 26, ;
		Left = 20, ;
		Name = "Label5", ;
		TabIndex = 0, ;
		Top = 23, ;
		Width = 343, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Instructions ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 19, ;
		Name = "Label6", ;
		TabIndex = 0, ;
		Top = 7, ;
		Width = 62
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		BackStyle = 0, ;
		Height = 44, ;
		Left = 11, ;
		Name = "Shape2", ;
		SpecialEffect = 0, ;
		Top = 13, ;
		Width = 363
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Shape3' AS shape WITH ;
		BackStyle = 0, ;
		Height = 71, ;
		Left = 11, ;
		Name = "Shape3", ;
		SpecialEffect = 0, ;
		Top = 70, ;
		Width = 363
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'Shape4' AS shape WITH ;
		BackStyle = 0, ;
		Height = 42, ;
		Left = 11, ;
		Name = "Shape4", ;
		SpecialEffect = 0, ;
		Top = 154, ;
		Width = 363
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Activate
		THIS.c_solutions1.saveHelp
	ENDPROC

	PROCEDURE Deactivate
		IF TYPE("THIS.c_solutions1") = "O" THEN
			THIS.c_solutions1.restoreHelp
		ENDIF
	ENDPROC

	PROCEDURE Destroy
		RELEASE oXLChart1
		
	ENDPROC

	PROCEDURE Error
		Parameters nError, cMethod, nLine
		
	ENDPROC

	PROCEDURE Init
		IF  fontmetric(1, 'MS Sans Serif', 8, '') # 13 OR ;
			fontmetric(4, 'MS Sans Serif', 8, '') # 2 OR ;
			fontmetric(6, 'MS Sans Serif', 8, '') # 5 OR ;
			fontmetric(7, 'MS Sans Serif', 8, '') # 11
			this.setall('fontname', 'Tahoma')  
		ELSE
			this.setall('fontname','MS Sans Serif')
		ENDIF
		this.setall('fontsize',8)
		
		
	ENDPROC

	PROCEDURE cmdChart.Click
		#DEFINE TAB	CHR(9)
		#DEFINE CRLF	CHR(13)+CHR(10)
		#DEFINE DOGS_LOC	"Dogs"
		#DEFINE CATS_LOC	"Cats"
		
		LOCAL nTotSeries,i
		public oXLChart1
		oXLChart1 = GetObject('','excel.chart')
		oXLChart1.application.charts[1].haslegend = .F.
		oXLChart1.application.visible = .t.
		oXLChart1.application.worksheets(1).cells().clear
		
		_cliptext = ""+TAB+CATS_LOC+TAB+DOGS_LOC+CRLF+;
				 "1994"+TAB+"11"+TAB+"22"+CRLF+;
				 "1995"+TAB+"33"+TAB+"44"+CRLF+;
				 "1996"+TAB+"55"+TAB+"55"+CRLF
		
		oXLChart1.application.worksheets(1).cells(1,1).pastespecial
		oXLChart1.application.charts[1].autoformat(-4100,1)
		
		* Remove extra series added by Excel
		nTotSeries = oXLChart1.application.charts[1].SeriesCollection().count
		FOR i = m.nTotSeries to 4 STEP -1
			oXLChart1.application.charts[1].SeriesCollection(m.i).delete
		ENDFOR
		oXLChart1.application.charts[1].haslegend = .T.
		
		
	ENDPROC

	PROCEDURE cmdChart.Error
		Parameters nError, cMethod, nLine
		=messageb(message())
		cancel
		
	ENDPROC

	PROCEDURE cmdSheet.Click
		* This program sends the results of a crosstab query to 
		* Microsoft Excel to calculate Sales trends for products
		* in the TESTDATA database. The trend information is 
		* retrieved from Excel.
		
		#DEFINE PRODUCT_LOC "Product"
		#DEFINE SALESJAN_LOC "Sales - Jan"
		#DEFINE SALESFEB_LOC "Sales - Feb"
		#DEFINE SALESMAR_LOC "Sales - Mar"
		#DEFINE TREND_LOC "Trend"
		#DEFINE QUERYDATA_LOC	"Querying sales data..."
		#DEFINE STARTXL_LOC		"Starting Excel..."
		#DEFINE TRENDDATA_LOC	"Trend Data Retrieved"
		
		LOCAL i,j,TrendFunc,xlsheet,XLApp,tmpsheet
		
		WAIT WINDOW QUERYDATA_LOC NOWAIT 
		
		LOCAL lcDataDir
		lcDataDir = HOME(2)
		DO CASE
		CASE FILE(HOME(2)+"data\testdata.dbc")
			lcDataDir = HOME(2)
		CASE FILE(HOME()+"samples\data\testdata.dbc")
			lcDataDir = HOME() + "Samples\"
		OTHERWISE
			MESSAGEBOX(DATAERR_LOC)
			RETURN .F.
		ENDCASE
		OPEN DATABASE (lcDataDir+"data\testdata.dbc")
		
		SELECT Products.prod_name, MONTH(Orders.order_date),;
		  SUM(Orditems.quantity);
		 FROM testdata!orders, testdata!orditems, testdata!products;
		 WHERE Orders.order_id = Orditems.order_id;
		   AND Products.product_id = Orditems.product_id;
		   AND Orders.order_date > {^1994/12/31};
		 GROUP BY Orditems.product_id, 2, Products.prod_name;
		 ORDER BY Products.prod_name, 2;
		 INTO CURSOR curSalesData
		 
		 DO (_GENXTAB) WITH 'ctabSalesData'
		
		SELECT *, N_1 from ctabSalesData INTO ARRAY arrSalesData
		
		WAIT WINDOW STARTXL_LOC NOWAIT 
		
		tmpsheet = GetObject('','excel.sheet')
		
		XLApp = tmpsheet.application
		
		XLApp.Visible = .t.
		XLApp.WorkBooks.Add()
		XLSheet = XLApp.ActiveSheet
		
		XLSheet.Cells(1,1).Value = PRODUCT_LOC 
		XLSheet.Cells(1,2).Value = SALESJAN_LOC 
		XLSheet.Cells(1,3).Value = SALESFEB_LOC 
		XLSheet.Cells(1,4).Value = SALESMAR_LOC 
		XLSheet.Cells(1,5).Value = TREND_LOC 
		
		FOR i = 1 to 10
			FOR j = 1 to 4
				IF ISNULL (arrSalesData(i,j)) THEN
					XLSheet.Cells(i+1,j).Value = 0
				ELSE
					XLSheet.Cells(i+1,j).Value = arrSalesData(i,j)
				ENDIF
			ENDFOR
			TrendFunc = "=TREND(B" + LTRIM(STR(i+1)) + ":D" + LTRIM(STR(i+1)) + ",,4)"
			XLSheet.Cells(i+1,5).Value = TrendFunc
		ENDFOR
		
		FOR i = 1 to 10
			IF XLSheet.Cells(i+1,5).Value < 0 THEN
				XLSheet.Cells(i+1,5).Value = 0
			ELSE 
				XLSheet.Cells(i+1,5).Value = INT(XLSheet.Cells(i+1,5).Value)
			ENDIF
		ENDFOR
		
		WAIT WINDOW TRENDDATA_LOC TIMEOUT 2
		CLOSE DATA
		
		
	ENDPROC

ENDDEFINE
