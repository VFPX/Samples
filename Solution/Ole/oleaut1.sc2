*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="oleaut1.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS datanavigation AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Name = "Datanavigation"

ENDDEFINE

DEFINE CLASS oleautform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Behindscenes1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="C_solutions1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdclose1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: callsample
		*m: runsample
		*m: soln_escape_handler
		*p: coldescape
		*p: conescape
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	Caption = "Automate Microsoft Word and Excel"
	DataSession = 2
	DoCreate = .T.
	Height = 109
	HelpContextID = 1231579
	MaxButton = .F.
	MinButton = .T.
	Name = "oleautform"
	Width = 328

	ADD OBJECT 'Behindscenes1' AS behindscenes WITH ;
		Left = 11, ;
		Name = "Behindscenes1", ;
		TabIndex = 3, ;
		Top = 81
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'C_solutions1' AS c_solutions WITH ;
		Height = 18, ;
		Left = 41, ;
		Name = "C_solutions1", ;
		Top = 85, ;
		Width = 25
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="custom" />

	ADD OBJECT 'Cmdclose1' AS cmdclose WITH ;
		Height = 23, ;
		Left = 246, ;
		Name = "Cmdclose1", ;
		TabIndex = 2, ;
		Top = 81, ;
		Width = 72
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "\<Run Example", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 169, ;
		Name = "Command1", ;
		TabIndex = 1, ;
		Top = 81, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label5' AS label WITH ;
		Caption = "To pass Microsoft Visual FoxPro data to Microsoft Excel for charting, then to Microsoft Word for displaying, Click Run Example.  (You must have all three products installed.)", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 41, ;
		Left = 19, ;
		Name = "Label5", ;
		TabIndex = 0, ;
		Top = 23, ;
		Width = 291, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Instructions ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 18, ;
		Name = "Label6", ;
		TabIndex = 0, ;
		Top = 7, ;
		Width = 62
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		BackStyle = 0, ;
		Height = 58, ;
		Left = 10, ;
		Name = "Shape2", ;
		SpecialEffect = 0, ;
		Top = 13, ;
		Width = 309
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Activate
		THIS.c_solutions1.saveHelp
		
	ENDPROC

	PROCEDURE callsample
		LOCAL nlLocaleId
		*** set the LOCALEID to English
		nlLocaleId=sys(3004)
		=sys(3006,1033)
		
		SET ESCAPE ON
		IF TYPE("_screen.activeform")="O" and !ISNULL(_screen.activeform)
			LOCAL cEscapeHandler 
			cEscapeHandler = "_screen.activeform.soln_escape_handler"
			ON ESCAPE &cEscapeHandler
		ENDIF
		
		THIS.RunSample()
		
		IF EMPTY(THIS.cOnEscape)
			ON ESCAPE
		ELSE
			cTmpEscape = THIS.cOnEscape
			ON ESCAPE &cTmpEscape
		ENDIF
		**** Reset the LocaleId to the previous value
		=sys(3006,val(nlLocaleId))
		
	ENDPROC

	PROCEDURE Deactivate
		IF TYPE("THIS.c_solutions1") = "O" THEN
			THIS.c_solutions1.restoreHelp
		ENDIF
		IF THIS.cOldEscape = "OFF"
			SET ESCAPE OFF
		ENDIF
		IF EMPTY(THIS.cOnEscape)
			ON ESCAPE
		ELSE
			cTmpEscape = THIS.cOnEscape
			ON ESCAPE &cTmpEscape
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		IF  fontmetric(1, 'MS Sans Serif', 8, '') # 13 OR ;
			fontmetric(4, 'MS Sans Serif', 8, '') # 2 OR ;
			fontmetric(6, 'MS Sans Serif', 8, '') # 5 OR ;
			fontmetric(7, 'MS Sans Serif', 8, '') # 11
			this.setall('fontname', 'Tahoma')  
		ELSE
			this.setall('fontname','MS Sans Serif')
		ENDIF
		this.setall('fontsize',8)
		
		THIS.cOldEscape = SET("ESCAPE")
		THIS.cOnEscape = ON("ESCAPE")
	ENDPROC

	PROCEDURE runsample
		*:*********************************************************************
		*:
		*: 		Form file: \SAMPLES\OLE\OLEAUT1.SCX
		*:
		*:         System: OLE
		*:         Author: Microsoft Corporation
		*:		  Created: 10/24/94
		*:	Last modified: 05/25/95
		*:
		*:
		*:*********************************************************************
		* This  is an example of OLE Automation, and it demonstrates how to
		* select data from a FoxPro database, place the data in
		* an Excel spreadsheet, graph the data using Chart, and then display
		* the graph in Word.  To use this example, you need Excel 5.0c,
		* Word 6.0a, and TESTDATA.DBC!customer.dbf, located in your FoxPro \SAMPLES\DATA
		* directory.
		*
		* To run this example, type DO FORM OLEAUT1.SCX
		* in the Command window.
		*
		***********************************************************************
		** Localization strings
		
		#DEFINE WAITMESSAGE1_LOC 			"Performing Query..."
		#DEFINE WAITMESSAGE2_LOC 			"Creating Excel Spreadsheet...."
		#DEFINE WAITMESSAGE3_LOC 			"Placing Query Info into Spreadsheet..."
		#DEFINE WAITMESSAGE4_LOC 			"Creating Graph Object...."
		#DEFINE WAITMESSAGE5_LOC 			"Creating Graph..."
		#DEFINE WAITMESSAGE6_LOC 			"Creating Word Document..."
		#DEFINE WAITMESSAGE7_LOC 			"Done!"
		
		#DEFINE APPSHOW_WORDUS_LOC			"appshow"
		#DEFINE FILENEW_WORDUS_LOC			"filenewdefault"
		#DEFINE INSERT_WORDUS_LOC			'insert("Here is your graph!")'
		#DEFINE EDITPASTESPECIAL_WORDUS_LOC	"editpastespecial(,,,,'PICT')"
		#DEFINE	OBJECT_TYPE					"OBJECT"
		
		**** Define tokenized Word 6.0 commands, since Word 6.0 does not
		**** English Automation commands.
		APPSHOW_WORDUS			=APPSHOW_WORDUS_LOC
		FILENEW_WORDUS			=FILENEW_WORDUS_LOC
		INSERT_WORDUS			=INSERT_WORDUS_LOC
		EDITPASTESPECIAL_WORDUS	=EDITPASTESPECIAL_WORDUS_LOC
		**********************************************************************
		
		PUBLIC ObjWDdoc
		
		LOCAL lcDataDir
		lcDataDir = HOME(2)
		DO CASE
		CASE FILE(HOME(2)+"data\testdata.dbc")
			lcDataDir = HOME(2)
		CASE FILE(HOME()+"samples\data\testdata.dbc")
			lcDataDir = HOME() + "Samples\"
		OTHERWISE
			MESSAGEBOX(DATAERR_LOC)
			RETURN .F.
		ENDCASE
		
		wait wind WAITMESSAGE1_LOC nowait
		SELECT city, count(city) ;
			FROM (lcDataDir + "data\testdata!customer") ;
			GROUP BY city ;
			HAVING COUNT(city) > 1 ;
			INTO array cust_distrib
		
		wait wind WAITMESSAGE2_LOC nowait
		objXLsheet=CreateObject("Excel.Sheet")
		objXLsheet.application.visible=.T.
		
		* Excel 97 Automation change
		* CreateObject() returns Object instead of Sheet1
		IF UPPER(objXLsheet.Name)=OBJECT_TYPE
			lHasExcel97 = .T.
			objXLsheet = objXLsheet.Sheets[1]
		ELSE
			lHasExcel97 = .F.
		ENDIF
		
		Wait wind WAITMESSAGE3_LOC nowait
		*** Copy data to an excel spreadsheet
		for i = 1 to _TALLY
			objXLsheet.Cells(i,1).Value = cust_distrib(i,1)
			objXLsheet.Cells(i,2).Value = cust_distrib(i,2)
		endfor
		
		Wait wind WAITMESSAGE4_LOC nowait
		
		*** Add a ChartObject to the worksheet:
		objChart1 = objXLsheet.ChartObjects.Add(100, 100, 200, 200)
		
		*** Create the chart.
		*** NOTE: Parameters for chartwizard can be found in the Excel VBA
		*** help file. Definitions of xlConstants are found in xlconst.bas
		*** which is included with the Office Developer's Kit
		***
		*** The parameters for some server functions are sometimes hard to
		*** find (like chartwizard). The best way to find the correct parameters
		*** is to record the same steps as macro in the server application.
		*** Then edit the macro and copy the parameters
		*** and paste them into Visual FoxPro.
		
		Wait wind WAITMESSAGE5_LOC nowait
		objxlsheet.chartobjects(1).chart.;
			chartwizard(objxlsheet.range(objxlsheet.cells(1,1),objxlsheet.cells(10,2)),;
			-4100,4,1,0,1,1,"","","","")
		
		ObjXLsheet.ChartObjects(1).select
		ObjXLsheet.ChartObjects(1).copy
		
		IF !m.lHasExcel97
			objXLsheet.application.quit
		ENDIF
		release objXLsheet
		
		Wait wind WAITMESSAGE6_LOC nowait
		objWDdoc=crea("word.basic")
		objwddoc.&APPSHOW_WORDUS	&&added 8/17 for Word 7.0 support
		objwddoc.&FILENEW_WORDUS
		objwddoc.&INSERT_WORDUS
		
		**** Because the excel objects were already RELEASEd
		**** the graph must be pasted w/o a link.
		**** It is pasted as a PICTURE instead of a GRAPH
		**** To paste as a link, you would use this command
		**** objWDdoc.editpaste
		**** AND you would have to make sure the Excel Objects
		**** were not RELEASEd and that Excel was still running
		
		objwddoc.&EDITPASTESPECIAL_WORDUS
		Wait Wind WAITMESSAGE7_LOC nowait
		
	ENDPROC

	PROCEDURE soln_escape_handler
		#DEFINE err_teminate_loc	"Would you like to terminate automation sample now?"
		IF MESSAGEBOX(err_teminate_loc,36)=6
			RETURN TO CALLSAMPLE
		ENDIF
		
	ENDPROC

	PROCEDURE Command1.Click
		THISFORM.CallSample()
		
	ENDPROC

	PROCEDURE Command1.Error
		Parameters nError, cMethod, nLine
		=messagebox(message())
		cancel
		
	ENDPROC

ENDDEFINE
