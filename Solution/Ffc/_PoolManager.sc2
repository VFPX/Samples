*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="_poolmanager.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 20
	Name = "Dataenvironment"
	Top = 391
	Width = 520

ENDDEFINE

DEFINE CLASS frmpoolmanager AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="cmdRequest" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstEvents" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="PoolManager" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmbCustomer" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: poolmanager_objectrequested
		*m: poolmanager_objectreturned
		*m: viewcustomer
		*p: crunpath
		*p: noutstandingreferences		&& Counts the number of visible customer forms
	*</DefinedPropArrayMethod>

	Caption = "Using the Pool Manager Foundation Class"
	DoCreate = .T.
	Height = 255
	HelpContextID = 1231684
	Name = "frmpoolmanager"
	noutstandingreferences = 0		&& Counts the number of visible customer forms
	Width = 411
	Behindscenes1.Left = 5
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.Picture = ..\bts.bmp
	Behindscenes1.TabIndex = 4
	Behindscenes1.Top = 225
	Cmdclose1.Left = 335
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 5
	Cmdclose1.Top = 225
	C_solutions1.Left = 70
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 225
	Label1.Caption = "Use the _PoolManager class when you repeatedly need objects for a limited period of time and those objects are slow to create or require access to time-consuming or limited resources such as database connections."
	Label1.Height = 40
	Label1.Left = 16
	Label1.Name = "Label1"
	Label1.TabIndex = 6
	Label1.Top = 24
	Label1.Width = 384
	Label4.Name = "Label4"
	Label4.TabIndex = 7
	Shape2.Height = 59
	Shape2.Left = 5
	Shape2.Name = "Shape2"
	Shape2.Top = 10
	Shape2.Width = 400

	ADD OBJECT 'cmbCustomer' AS combobox WITH ;
		BoundColumn = 2, ;
		ColumnCount = 2, ;
		ColumnWidths = "230,40", ;
		Height = 24, ;
		Left = 5, ;
		Name = "cmbCustomer", ;
		RowSource = "Customer.Company, Cust_ID", ;
		RowSourceType = 6, ;
		Style = 2, ;
		TabIndex = 1, ;
		Top = 76, ;
		Width = 295
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdRequest' AS commandbutton WITH ;
		Caption = "\<View customer", ;
		Default = .T., ;
		Height = 24, ;
		Left = 305, ;
		Name = "cmdRequest", ;
		TabIndex = 2, ;
		Top = 76, ;
		Width = 100
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'lstEvents' AS listbox WITH ;
		Height = 110, ;
		Left = 5, ;
		Name = "lstEvents", ;
		TabIndex = 3, ;
		Top = 106, ;
		Width = 400
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'PoolManager' AS _poolmanager WITH ;
		cclass = frmCustomer, ;
		cclasslibrary = frmCustomer.vcx, ;
		Left = 45, ;
		Name = "PoolManager", ;
		Top = 225, ;
		Width = 25
		*< END OBJECT: ClassLib="..\..\..\ffc\_poolmanager.vcx" BaseClass="custom" />
	
	PROCEDURE Init
		*========================================================================================
		* Subscribe to the PoolManager's events to fill the event list box
		*========================================================================================
			This.cRunPath = JUSTPATH(SYS(1271, thisform))
			This.PoolManager.cClassLibrary = ADDBS(This.cRunPath)+This.PoolManager.cClassLibrary
			Bindevent(This.PoolManager,"ObjectRequested",Thisform,"PoolManager_ObjectRequested")
			Bindevent(This.PoolManager,"ObjectReturned",Thisform,"PoolManager_ObjectReturned")
			
		Return DoDefault()
	ENDPROC

	PROCEDURE Load
		*========================================================================================
		* Open the customer table
		*========================================================================================
		
			Local lcCustomer
			lcCustomer = Addbs(_Samples)+"Data\Customer.DBF"
			USE (m.lcCustomer) Again Shared In 0 Alias Customer
		
		Return DoDefault()
	ENDPROC

	PROCEDURE poolmanager_objectrequested
		*========================================================================================
		* Event fires when an object has been requested
		*========================================================================================
		LParameter toForm, tcCustID
		
			#DEFINE ObjectRequested_LOC	"Object requested "
		
			This.lstEvents.AddItem(ObjectRequested_LOC+"("+toForm.Name+":"+m.tcCustID+")")
			This.lstEvents.ListIndex = This.lstEvents.ListCount
			
			This.nOutstandingReferences = This.nOutstandingReferences + 1
			This.cmdclose1.Enabled = .F.
			This.Closable = .F.
		
	ENDPROC

	PROCEDURE poolmanager_objectreturned
		*========================================================================================
		* Event fires when an object is added back to the pool
		*========================================================================================
		LParameter toForm
		
			#DEFINE ObjectReturned_LOC	"Object returned "
		
			Thisform.lstEvents.AddItem(ObjectReturned_LOC+"("+toForm.Name+")")
			Thisform.lstEvents.ListIndex = Thisform.lstEvents.ListCount
		
			This.nOutstandingReferences = This.nOutstandingReferences - 1
			If This.nOutstandingReferences == 0
				This.cmdclose1.Enabled = .T.
				This.Closable = .T.
			Else
				This.cmdclose1.Enabled = .F.
				This.Closable = .F.
			EndIf
			
		
	ENDPROC

	PROCEDURE viewcustomer
		*========================================================================================
		* Called by the view button to request a new customer form. The form returns itself to
		* the pool from the QueryUnload event.
		*========================================================================================
		
			Local loForm, lcCustID
			lcCustID = Thisform.cmbCustomer.Value
			If not IsNull(m.lcCustID) and not Empty(m.lcCustID)
				loForm = Thisform.PoolManager.Get(m.lcCustID)
				If Vartype(m.loForm) == "O"           && might fail. Number of forms limited to 227.
					loForm.Show()
				EndIf 
			EndIf 
			
		
	ENDPROC

	PROCEDURE cmbCustomer.Init
		*========================================================================================
		* Activate first customer.
		*========================================================================================
		
			This.ListIndex = 1
	ENDPROC

	PROCEDURE cmdRequest.Click
		Thisform.ViewCustomer()
	ENDPROC

ENDDEFINE
