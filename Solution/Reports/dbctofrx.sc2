*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dbctofrx.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	Height = 278
	Left = 14
	Name = "Dataenvironment"
	Top = 110
	Width = 590

ENDDEFINE

DEFINE CLASS form1 AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="C_solutions1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Behindscenes1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cmdclose1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />

	Caption = "Print Database Structure"
	DataSession = 2
	DoCreate = .T.
	Height = 122
	HelpContextID = 1231590
	Left = 8
	MaxButton = .F.
	Name = "Form1"
	Top = 4
	Width = 331

	ADD OBJECT 'Behindscenes1' AS behindscenes WITH ;
		Left = 11, ;
		Name = "Behindscenes1", ;
		TabIndex = 3, ;
		Top = 92
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'C_solutions1' AS c_solutions WITH ;
		Height = 18, ;
		Left = 50, ;
		Name = "C_solutions1", ;
		Top = 94, ;
		Width = 25
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="custom" />

	ADD OBJECT 'Cmdclose1' AS cmdclose WITH ;
		Height = 23, ;
		Left = 251, ;
		Name = "Cmdclose1", ;
		TabIndex = 2, ;
		Top = 92, ;
		Width = 72
		*< END OBJECT: ClassLib="..\solution.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		Caption = "\<Print...", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 173, ;
		Name = "Command1", ;
		TabIndex = 1, ;
		Top = 92, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Label4' AS label WITH ;
		Caption = "The database (.DBC) file contains data dictionary information about a database, including tables, views, fields, and indexes.  Click the Print button to preview a report that will print this information from a .DBC file you select.", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 52, ;
		Left = 17, ;
		Name = "Label4", ;
		TabIndex = 0, ;
		Top = 24, ;
		Width = 294, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		Caption = " Instructions ", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 17, ;
		Name = "Label5", ;
		TabIndex = 0, ;
		Top = 7, ;
		Width = 62
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Shape2' AS shape WITH ;
		BackStyle = 0, ;
		Height = 70, ;
		Left = 9, ;
		Name = "Shape2", ;
		SpecialEffect = 0, ;
		Top = 13, ;
		Width = 314
		*< END OBJECT: BaseClass="shape" />
	
	PROCEDURE Activate
		THIS.c_solutions1.saveHelp
	ENDPROC

	PROCEDURE Deactivate
		IF TYPE("THIS.c_solutions1") = "O" THEN
			THIS.c_solutions1.restoreHelp
		ENDIF
	ENDPROC

	PROCEDURE Error
		LPARAMETERS nError, cMethod, nLine
	ENDPROC

	PROCEDURE Init
		IF  fontmetric(1, 'MS Sans Serif', 8, '') # 13 OR ;
			fontmetric(4, 'MS Sans Serif', 8, '') # 2 OR ;
			fontmetric(6, 'MS Sans Serif', 8, '') # 5 OR ;
			fontmetric(7, 'MS Sans Serif', 8, '') # 11
			this.setall('fontname', 'Tahoma')  
		ELSE
			this.setall('fontname','MS Sans Serif')
		ENDIF
		this.setall('fontsize',8)
		
		
	ENDPROC

	PROCEDURE Command1.Click
		#DEFINE C_INDEX_LOC "Index"
		PRIVATE cDBCName,cDataName,aDataSources,cFieldName
		PRIVATE cGetCaption,aDBCs,nSaveArea,nTotDBCs,i,j
		PRIVATE cDataType,	cNull,cRule,cDefValue,cInputMask,cFormat,cComment,cPrimeKey,lOpenOK
		
		cDBCname = "tastrade"
		cDataName = ""
		cFieldName = ""
		cGetCaption = ""
		nSaveData = SELECT()
		SELECT 0
		cSaveDBC = SET("DATABASE")
		
		nTotDBCs = ADATA(aDBCs)
		m.cDBCName = GETFILE("DBC")
		IF EMPTY(m.cDBCName) OR ATC(".DBC",m.cDBCName)=0
			RETURN
		ENDIF
		IF USED('tempdbcfrx')
			SELECT tempdbcfrx
			USE
		ENDIF
		
		OPEN DATABASE (m.cDBCName)
		USE (m.cDBCName) AGAIN ALIAS tempdbcfrx
		IF EMPTY(ALIAS())
			RETURN
		ENDIF
		
		CREATE CURSOR dbctofrx (parentid i,;
			objecttype c(10), ;
			desc m,;
			datatype c(10),;
			HasNull c(1),;
			rule m,;
			defvalue c(20),;
			inpmsk c(20),;
			format c(10),;
			comment m)
		
		SELECT tempdbcfrx
		SELECT objectid FROM tempdbcfrx;
			WHERE parentid = 1 AND ObjectType # "Database";
			INTO ARRAY aDataSources
		
		FOR EACH item IN aDataSources
			LOCATE FOR parentid = 1 AND objectid = m.item AND !DELETED()
			cDataName = ALLTRIM(tempdbcfrx.objectname)
			cObjType = ALLTRIM(UPPER(tempdbcfrx.objecttype))
			cPrimeKey = IIF(m.cObjType = "TABLE",DBGETPROP(cDataName, "Table", "Primarykey" ),"")
			
			INSERT INTO dbctofrx (parentid,objecttype, desc,rule) ;
				VALUES(tempdbcfrx.parentid,tempdbcfrx.objecttype,tempdbcfrx.objectname,m.cPrimeKey)
		
			IF m.cObjType = "TABLE"
				DIMENSION aDataTypes[1]
				STORE "" TO aDataTypes[1]
				IF USED("tmpInfo")
					USE IN tmpInfo
				ENDIF
				USE (m.cDataName) AGAIN ALIAS tmpInfo IN 0	
				lOpenOK = USED("tmpInfo")
				IF m.lOpenOK
					AFIELDS(aDataTypes,"tmpInfo")
				ENDIF
			ENDIF
			nPos = 1
			SCAN FOR parentid = m.item AND objecttype = "Field" AND !DELETED()
				cFieldName = ALLTRIM(tempdbcfrx.objectname)
				cGetCaption = DBGETPROP(cDataName+"."+cFieldName, "field", "Caption" )
		
				DO CASE
				CASE m.cObjType = "TABLE" AND m.lOpenOK
					cDataType = aDataTypes[m.nPos,2]+;
						IIF(aDataTypes[m.nPos,3]=0,"","("+ALLTRIM(STR(aDataTypes[m.nPos,3])))+;
						IIF(aDataTypes[m.nPos,4]=0,"",","+ALLTRIM(STR(aDataTypes[m.nPos,4])))+;
						IIF(aDataTypes[m.nPos,3]=0,"",")")
					cNull = IIF(aDataTypes[m.nPos,5],"Y","N")
				CASE cObjType = "TABLE"
					cDataType = ""
					cNull = ""
				OTHERWISE
					cDataType = DBGETPROP(cDataName+"."+cFieldName,'field','DataType')
					cNull = ""
				ENDCASE
		
				cRule = DBGETPROP(cDataName+"."+cFieldName,'field','RuleExpression')
				cDefValue = DBGETPROP(cDataName+"."+cFieldName,'field','DefaultValue')
				cInputMask = DBGETPROP(cDataName+"."+cFieldName,'field','InputMask')
				cFormat = DBGETPROP(cDataName+"."+cFieldName,'field','Format')
				cComment = DBGETPROP(cDataName+"."+cFieldName,'field','Comment')
		
				INSERT INTO dbctofrx (parentid,objecttype, desc,datatype,hasnull,rule,defvalue,inpmsk,format,comment) ;
					VALUES(tempdbcfrx.parentid,tempdbcfrx.objecttype,;
					IIF(EMPTY(m.cGetCaption),m.cFieldName,m.cGetCaption),m.cDataType,m.cNull,m.cRule,m.cDefValue,m.cInputMask,m.cFormat,m.cComment)
				nPos = m.nPos + 1
			ENDSCAN
			
			IF m.cObjType = "TABLE" AND m.lOpenOK
				SELECT tmpInfo
				FOR j = 1 TO TAGCOUNT()
					INSERT INTO dbctofrx (parentid,objecttype,desc,rule) ;
						VALUES(m.item, C_INDEX_LOC, LOWER(TAG(m.j,"tmpInfo")), LOWER(KEY(m.j,"tmpInfo")))
				ENDFOR
				SELECT tempdbcfrx
			ELSE
				SCAN FOR parentid = m.item AND objecttype = "Index"
					INSERT INTO dbctofrx (parentid,objecttype, desc) ;
						VALUES(m.item,tempdbcfrx.objecttype,tempdbcfrx.objectname)		
				ENDSCAN
			ENDIF
			
			IF USED("tmpInfo")
				USE IN tmpInfo
			ENDIF
		ENDFOR
		
		USE
		SELECT dbctofrx
		GO TOP
		
		REPORT FORM dbctofrx PREVIEW
		
		* Restore original settings
		USE
		SELECT (m.nSaveData)
		IF nTotDBCs=0 OR ASCAN(aDBCs,cDBCname)=0
			CLOSE DATA
		ENDIF
		IF !EMPTY(m.cSaveDBC)
			SET DATABASE TO (m.cSaveDBC)
		ELSE
			SET DATABASE TO	
		ENDIF
	ENDPROC

ENDDEFINE
