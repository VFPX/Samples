*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="dvds.dbc" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*

<DATABASE>
	<Name>DVDS</Name>
	<Comment></Comment>
	<Version>11</Version>
	<DBCEvents>.T.</DBCEvents>
	<DBCEventFilename></DBCEventFilename>


	<TABLES>

		<TABLE>
			<Name>DVDPRICE</Name>
			<Comment></Comment>
			<Path>dvdprice.dbf</Path>
			<DeleteTrigger></DeleteTrigger>
			<InsertTrigger></InsertTrigger>
			<UpdateTrigger></UpdateTrigger>
			<PrimaryKey>id</PrimaryKey>
			<RuleExpression></RuleExpression>
			<RuleText></RuleText>

			<FIELD_ORDER>
				id
				price
				listprice
			</FIELD_ORDER>

			<FIELDS>
				<FIELD>
					<Name>id</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>listprice</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>price</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
			</FIELDS>

			<INDEXES>
				<INDEX>
					<Name>id</Name>
					<Comment></Comment>
					<IsUnique>.T.</IsUnique>
				</INDEX>
			</INDEXES>

			<RELATIONS>
				<RELATION>
					<Name>Relation 1</Name>
					<ChildTable>DVDPRICE</ChildTable>
					<ParentTable>DVDS</ParentTable>
					<ChildIndex>ID</ChildIndex>
					<ParentIndex>ID</ParentIndex>
					<RefIntegrity></RefIntegrity>
				</RELATION>
			</RELATIONS>

		</TABLE>

		<TABLE>
			<Name>DVDS</Name>
			<Comment></Comment>
			<Path>dvds.dbf</Path>
			<DeleteTrigger></DeleteTrigger>
			<InsertTrigger></InsertTrigger>
			<UpdateTrigger></UpdateTrigger>
			<PrimaryKey>id</PrimaryKey>
			<RuleExpression></RuleExpression>
			<RuleText></RuleText>

			<FIELD_ORDER>
				id
				name
				listprice
				duedate
				genreid
				features
				notes
			</FIELD_ORDER>

			<FIELDS>
				<FIELD>
					<Name>duedate</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>features</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>genreid</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>id</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>listprice</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>name</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>notes</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
			</FIELDS>

			<INDEXES>
				<INDEX>
					<Name>genreid</Name>
					<Comment></Comment>
					<IsUnique>.F.</IsUnique>
				</INDEX>
				<INDEX>
					<Name>id</Name>
					<Comment></Comment>
					<IsUnique>.T.</IsUnique>
				</INDEX>
			</INDEXES>

			<RELATIONS>
				<RELATION>
					<Name>Relation 2</Name>
					<ChildTable>DVDS</ChildTable>
					<ParentTable>GENRES</ParentTable>
					<ChildIndex>GENREID</ChildIndex>
					<ParentIndex>GENREID</ParentIndex>
					<RefIntegrity></RefIntegrity>
				</RELATION>
			</RELATIONS>

		</TABLE>

		<TABLE>
			<Name>GENRES</Name>
			<Comment></Comment>
			<Path>genres.dbf</Path>
			<DeleteTrigger></DeleteTrigger>
			<InsertTrigger></InsertTrigger>
			<UpdateTrigger></UpdateTrigger>
			<PrimaryKey>genreid</PrimaryKey>
			<RuleExpression></RuleExpression>
			<RuleText></RuleText>

			<FIELD_ORDER>
				genreid
				genre
			</FIELD_ORDER>

			<FIELDS>
				<FIELD>
					<Name>genre</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
				<FIELD>
					<Name>genreid</Name>
					<Caption></Caption>
					<Comment></Comment>
					<DefaultValue></DefaultValue>
					<DisplayClass></DisplayClass>
					<DisplayClassLibrary></DisplayClassLibrary>
					<Format></Format>
					<InputMask></InputMask>
					<RuleExpression></RuleExpression>
					<RuleText></RuleText>
				</FIELD>
			</FIELDS>

			<INDEXES>
				<INDEX>
					<Name>genreid</Name>
					<Comment></Comment>
					<IsUnique>.T.</IsUnique>
				</INDEX>
			</INDEXES>

		</TABLE>
	</TABLES>




	<STOREDPROCEDURES><![CDATA[
#DEFINE DVDLOGIN_LOC	[Enter password:]
#DEFINE DVDLOGINCAP_LOC	[DVD Login]
#DEFINE DATAOPEN_LOC	Database opened by
#DEFINE DATACLOSED_LOC	Database closed by
#DEFINE NOMOD_LOC		"Sorry, you cannot modify this table."


PROCEDURE dbc_BeforeOpenTable(cTableName)
*Just before a table or view is opened. Return .F. to prevent table or view being opened.
IF ATC("dvds",cTableName)#0 AND UPPER(ALLTRIM(INPUTBOX(DVDLOGIN_LOC,DVDLOGINCAP_LOC)))#"ADMIN"
	* Since this is a sample, we will ignore password, however, you can enforce it by returning .F.
	* RETURN .F.
	RETURN .T.
ENDIF
ENDPROC


PROCEDURE dbc_OpenData(cDatabaseName, lExclusive, lNoupdate, lValidate)
*Immediately after DBC is opened.
LOCAL lcStr,lcLog
TEXT TO lcStr NOSHOW TEXTMERGE
DATAOPEN_LOC <<SYS(0)>>  <<DATETIME()>>.

ENDTEXT
lcLog = FORCEEXT(cDatabaseName,"LOG")
STRTOFILE(lcStr,lcLog,.T.)
ENDPROC


PROCEDURE dbc_CloseData(cDatabaseName, lExclusive, lNoupdate, lValidate)
*Immediately after DBC is opened.
LOCAL lcStr,lcLog
TEXT TO lcStr NOSHOW TEXTMERGE
DATACLOSED_LOC <<SYS(0)>>  <<DATETIME()>>.

ENDTEXT
lcLog = FORCEEXT(cDatabaseName,"LOG")
STRTOFILE(lcStr,lcLog,.T.)
ENDPROC


PROCEDURE dbc_BeforeModifyTable(cTableName)
* Just before a table is modified. Return .F. to prevent modification.
IF ATC("genres",cTableName)#0
	MESSAGEBOX(NOMOD_LOC)
	RETURN .F.
ENDIF
ENDPROC

	]]></STOREDPROCEDURES>
</DATABASE>