*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="oledd.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Cursor1" UniqueID="" Timestamp="" />

	Height = 200
	Left = 251
	Name = "Dataenvironment"
	Top = 242
	Width = 520

	ADD OBJECT 'Cursor1' AS cursor WITH ;
		Alias = "customer", ;
		CursorSource = "customer", ;
		Database = ..\..\data\testdata.dbc, ;
		Height = 90, ;
		Left = 10, ;
		Name = "Cursor1", ;
		Top = 20, ;
		Width = 95
		*< END OBJECT: BaseClass="cursor" />

ENDDEFINE

DEFINE CLASS frmoledd AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lstFields" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDrag" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbl1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDrop" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lstFiles" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Lbl2" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*p: namecounter
		*a: fieldinfo[1,0]
	*</DefinedPropArrayMethod>

	Caption = "Fun with OLE Drag and Drop"
	DoCreate = .T.
	Height = 310
	HelpContextID = 1231622
	Name = "frmOLEDD"
	namecounter = 1
	OLEDropMode = 1
	Visible = .T.
	Width = 492
	Behindscenes1.Left = 12
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.TabIndex = 9
	Behindscenes1.Top = 276
	Behindscenes1.ZOrderSet = 2
	Cmdclose1.Left = 408
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 11
	Cmdclose1.Top = 276
	Cmdclose1.ZOrderSet = 6
	C_solutions1.Left = 48
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 276
	Label1.Caption = "Try dragging and dropping between various controls and sources. "
	Label1.Height = 18
	Label1.Left = 24
	Label1.Name = "Label1"
	Label1.TabIndex = 10
	Label1.Top = 24
	Label1.Width = 420
	Label1.ZOrderSet = 4
	Label4.Name = "Label4"
	Label4.TabIndex = 12
	Label4.ZOrderSet = 5
	Shape2.Height = 36
	Shape2.Left = 12
	Shape2.Name = "Shape2"
	Shape2.Top = 12
	Shape2.Width = 468
	Shape2.ZOrderSet = 3

	ADD OBJECT 'cmdDrag' AS commandbutton WITH ;
		Caption = "Drag Me", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 408, ;
		Name = "cmdDrag", ;
		OLEDragMode = 1, ;
		OLEDragPicture = dragmecmd.bmp, ;
		OLEDropMode = 1, ;
		Top = 60, ;
		Width = 72
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Lbl1' AS label WITH ;
		Caption = "Drop text here to see the text reversed", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 144, ;
		Name = "Lbl1", ;
		Top = 60, ;
		Width = 244
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Lbl2' AS label WITH ;
		Caption = "Drag items to form", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 12, ;
		Name = "Lbl2", ;
		Top = 60, ;
		Width = 103
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblText' AS label WITH ;
		Caption = "Drop files here from the Windows Explorer", ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 144, ;
		Name = "lblText", ;
		TabIndex = 1, ;
		Top = 108, ;
		Width = 252, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lstFields' AS listbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 108, ;
		Left = 12, ;
		Name = "lstFields", ;
		OLEDragMode = 1, ;
		RowSource = "customer", ;
		RowSourceType = 8, ;
		Top = 76, ;
		Width = 120
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'lstFiles' AS listbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 60, ;
		ItemTips = .T., ;
		Left = 144, ;
		Name = "lstFiles", ;
		OLEDragMode = 1, ;
		OLEDropMode = 1, ;
		TabIndex = 2, ;
		Top = 124, ;
		Width = 252
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'txtDrop' AS textbox WITH ;
		FontName = "MS Sans Serif", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 144, ;
		Name = "txtDrop", ;
		OLEDropMode = 1, ;
		Top = 76, ;
		Width = 252
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		DODEFAULT()
		AFIELDS(This.FieldInfo)
		GO TOP
		
	ENDPROC

	PROCEDURE OLEDragDrop
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord
		LOCAL oSource, cType, cName, oNewObj, lCreatedObject, lSize, nField, nRow, cSaveExact
		
		IF oDataObject.GetFormat("VFP Source Object")
			oSource = oDataObject.GetData("VFP Source Object")
			IF oSource.Name == "lstFields"
				lCreatedObject = .T.
				lSize = .F.
				cType = TYPE( Thisform.lstFields.Value )
				cName = "obj" + TRANS(Thisform.NameCounter)
				Thisform.NameCounter = Thisform.NameCounter + 1
				cSaveExact = SET("EXACT")
				SET EXACT ON
				nField = ASCAN( Thisform.FieldInfo, upper(Thisform.lstFields.List( Thisform.lstFields.ListIndex )))
				nRow   = ASUBSCRIPT( Thisform.FieldInfo,nField,1)
				cType  = Thisform.FieldInfo[nRow,2]
				SET EXACT &cSaveExact
				DO CASE
				CASE cType == "C"
					This.AddObject(cName,"Textbox")
					lSize = .T.
					
				CASE cType == "N"
					This.AddObject( cName, "Textbox" )
					lSize = .T.
					
				CASE cType == "Y"
					This.AddObject( cName, "Textbox" )
					lSize = .T.
					
				CASE cType == "D"
					This.AddObject( cName, "Textbox" )
					lSize = .T.
					
				CASE cType == "T"
					This.AddObject( cName, "Textbox" )
					lSize = .T.
					
				CASE cType == "L"
					This.AddObject( cName, "Checkbox" )
					lSize = .F.
					
				CASE cType == "M"
					This.AddObject( cName, "Editbox" )
					lSize = .F.
					
				CASE cType == "G"
					This.AddObject( cName, "OLEBoundControl" )
					lSize = .F.
		
				OTHERWISE
					lCreatedObject = .F.
				ENDCASE
		
				IF lCreatedObject
					oNewObj = This.&cName.
		
					WITH oNewObj
						.ControlSource = Thisform.FieldInfo[nRow,1]
						.OLEDragMode = 1	&&DRAG_AUTOMATIC
						.Top = int( nYCoord / 7 ) * 7
						.Left = int( nXCoord / 7 ) * 7
						
						IF lSize and (nField <> 0)
							.Width = Thisform.FieldInfo[nRow,3] * FontMetric(6,"MS Sans Serif",8)+5
						ENDIF
						
						.Visible = .T.
					ENDWITH
					Thisform.Setall("Visible", .F., "Line")
					This.Refresh
				ENDIF
				
			ELSE
				oSource = oDataObject.GetData("VFP Source Object")
				oSource.Left = nXCoord
				oSource.Top = nYCoord
			ENDIF
		ENDIF
		
	ENDPROC

	PROCEDURE OLEDragOver
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord, nState
		
		DO CASE
		CASE nState == 0	&& Drag Enter
			IF oDataObject.GetFormat('VFP Source Object')
				This.OLEDropHasData = 1
				This.OLEDropEffects = 2	&&DROPEFFECT_MOVE
			ENDIF
		CASE nState == 1	&& Drag Leave
		CASE nState == 2	&& Drag Over
		ENDCASE
		
	ENDPROC

	PROCEDURE cmdDrag.OLEDragOver
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord, nState
		This.OLEDropHasData = 0
		
	ENDPROC

	PROCEDURE lstFields.OLEStartDrag
		LPARAMETERS oDataObject, nEffect
		Thisform.Setall( "Visible", .T., "Line" )
		
	ENDPROC

	PROCEDURE lstFiles.OLEDragDrop
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord
		LOCAL aValues, i, cText, nOperation
		
		*-- Check to see whether the user wants to copy or move
		IF nShift == 1
			nOperation = 1	&&DROPEFFECT_COPY
		ELSE
			nOperation = 2	&&DROPEFFECT_MOVE
		ENDIF
		
		Thisform.LockScreen = .T.
		
		DO CASE
		CASE oDataObject.GetFormat("OLE Variant Array")
			DIMENSION aValues[ 1 ]
			oDataObject.GetData("OLE Variant Array", @aValues )
		
			*-- Add each array element as 
			FOR i = 1 to alen(aValues,1)	&& for each row in the array
				IF (alen(aValues,2) > 1)
					This.AddItem( aValues[m.i,1])
				ELSE
					This.AddItem( aValues[m.i])
				ENDIF
			NEXT
		
		CASE oDataObject.GetFormat(1)		&& Text
			cText = oDataObject.GetData(1)
		
			*-- Add the text as a new item in the list
			This.AddItem( cText )
		
		CASE oDataObject.GetFormat(15)	&& Files CF_DROP
			DIMENSION aValues[1]
			oDataObject.GetData(15, @aValues )
			
			*-- Add each filename as a new item in the list
			FOR i = 1 to alen(aValues)
				This.AddItem(aValues[m.i])
			NEXT
		ENDCASE
		
		Thisform.LockScreen = .F.
		
		*-- Set the nEffect parameter for communication back to the source object
		nEffect = nOperation
	ENDPROC

	PROCEDURE lstFiles.OLEDragOver
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord, nState
		
		DO CASE
		CASE nState == 0		&&DRAG_ENTER
			DO CASE
			CASE oDataObject.GetFormat("OLE Variant Array")	&& Array
				This.OLEDropHasData = 1		&&DROPHASDATA_USEFUL
				This.OLEDropEffects = 1+2	&&DROPEFFECT_COPY + DROPEFFECT_MOVE
				
			CASE oDataObject.GetFormat(1)				&& Text
				This.OLEDropHasData = 1		&&DROPHASDATA_USEFUL
				This.OLEDropEffects = 1+2	&&DROPEFFECT_COPY + DROPEFFECT_MOVE
				
			CASE oDataObject.GetFormat(15)				&& Files CF_HDROP
				This.OLEDropHasData = 1		&&DROPHASDATA_USEFUL
				This.OLEDropEffects = 4		&&DROPEFFECT_LINK
			OTHERWISE
				This.OLEDropHasData = 0		&&DROPHASDATA_NOTUSEFUL
			ENDCASE
		
		CASE nState == 1	&& Drag Leave
		CASE nState == 2	&& Drag Over
		ENDCASE
		
	ENDPROC

	PROCEDURE txtDrop.OLEDragDrop
		LPARAMETERS oDataObject, nEffect, nButton, nShift, nXCoord, nYCoord
		LOCAL i, cText, cNewStr
		
		If oDataObject.Getformat(1)	&&CF_TEXT
			cText = oDataObject.GetData(1)
		
			*-- Reverse the text
			cNewStr = ""
			FOR i = len( cText ) to 1 STEP -1
				cNewStr = cNewStr + substr( cText, i, 1 )
			NEXT
			This.Value = cNewStr
		endif
		
		NODEFAULT
		
	ENDPROC

ENDDEFINE
