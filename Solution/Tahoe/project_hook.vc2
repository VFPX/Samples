*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="project_hook.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS activity_tracker AS projecthook 
 	*< CLASSDATA: Baseclass="projecthook" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: writelog
	*</DefinedPropArrayMethod>

	Height = 22
	Name = "activity_tracker"
	Width = 23
	
	PROCEDURE AfterBuild
		#DEFINE BUILDOK_LOC		"Build project - OK"
		#DEFINE BUILDFAIL_LOC		"Build project - Fail"
		LPARAMETERS nError
		
		IF nError = 0
			THIS.WriteLog(BUILDOK_LOC,'')
		ELSE
			THIS.WriteLog(BUILDFAIL_LOC,'')
		ENDIF
		
	ENDPROC

	PROCEDURE BeforeBuild
		#DEFINE DOBUILD_LOC		"Are you sure you want to build project?"
		#DEFINE NOBUILD_LOC		"Did not build project"
		
		LPARAMETERS cOutputName, nBuildAction, lRebuildAll, lShowErrors, lBuildNewGuids
		IF MESSAGEBOX(DOBUILD_LOC,36)#6
			THIS.WriteLog(NOBUILD_LOC,'')
			NODEFAULT
		ENDIF
		
	ENDPROC

	PROCEDURE Destroy
		#DEFINE VIEWACTIVITY_LOC "Would you like to view recent activity before closing project."
		LOCAL lnSaveArea
		
		IF USED("phook_sample")
			IF MESSAGEBOX(VIEWACTIVITY_LOC ,36)=6
				lnSaveArea = SELECT()
				SELECT phook_sample
				BROWSE NORMAL
				SELECT (lnSaveArea)
			ENDIF
			USE IN phook_sample
		ENDIF
		
	ENDPROC

	PROCEDURE Init
		#DEFINE INIT_LOC		"Opened project"
		#DEFINE LOADED_LOC		"Activity tracking project hook loading..."
		THIS.WriteLog(INIT_LOC,'')
		WAIT WINDOW LOADED_LOC TIMEOUT 1
		
	ENDPROC

	PROCEDURE QueryAddFile
		#DEFINE ADDFILE_LOC		"Add file"
		LPARAMETERS cFileName
		
		THIS.WriteLog(ADDFILE_LOC,cFileName)
		
	ENDPROC

	PROCEDURE QueryModifyFile
		#DEFINE MODIFYFILE_LOC		"Modify file"
		LPARAMETERS oFile, cClassName
		
		THIS.WriteLog(MODIFYFILE_LOC,oFile.Name+" "+IIF(EMPTY(cClassName),"",cClassName))
		
	ENDPROC

	PROCEDURE QueryRemoveFile
		#DEFINE REMOVEFILE_LOC		"Remove file"
		#DEFINE REMOVECLASS_LOC		"Remove class"
		LPARAMETERS oFile, cClassName, lDeleteFile
		
		THIS.WriteLog(IIF(EMPTY(cClassName),REMOVEFILE_LOC,REMOVECLASS_LOC), ;
			oFile.Name+" "+IIF(EMPTY(cClassName),"",cClassName))
		
	ENDPROC

	PROCEDURE QueryRunFile
		#DEFINE RUNFILE_LOC		"Run file"
		LPARAMETERS oFile
		
		THIS.WriteLog(RUNFILE_LOC,oFile.Name)
		
	ENDPROC

	PROCEDURE writelog
		LPARAMETERS tcActivity, tcFile
		IF !USED("phook_sample")
			CREATE CURSOR phook_sample (activity c(30),filename c(40),datetime t)
		ENDIF
		INSERT INTO phook_sample VALUES(tcActivity,JUSTFNAME(tcfile),datetime())
		
	ENDPROC

ENDDEFINE
