*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="messenger.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmsolution1 AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdGetFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSend" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Command3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtMessage" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboContacts" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblEmail" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSubject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboCC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboBCC" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label7" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addcontact
		*m: autosignin
		*m: getcontacts
		*m: getoleerror
		*m: instantmessage
		*m: openinbox
		*m: sendfile
		*m: sendkeys		&& Sends Keyboard output to the active window.
		*m: sendmail
		*m: signin
		*m: signout
		*p: ccomposeemailwindowtitle
		*p: csendfilewindowtitle
		*p: omessenger		&& Object reference to Messenger
		*p: owsh		&& Holds reference to the Windows Scripting Host Shell
	*</DefinedPropArrayMethod>

	Caption = "Controlling MSN Messenger"
	ccomposeemailwindowtitle = MSN Hotmail - Compose - Microsoft Internet Explorer
	csendfilewindowtitle = Send a file to
	DoCreate = .T.
	Height = 396
	HelpContextID = 1231691
	Name = "Frmsolution1"
	omessenger = .NULL.		&& Object reference to Messenger
	owsh = .NULL.		&& Holds reference to the Windows Scripting Host Shell
	Width = 510
	Behindscenes1.Left = 12
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.TabIndex = 21
	Behindscenes1.Top = 367
	Behindscenes1.ZOrderSet = 2
	Cmdclose1.Left = 432
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 22
	Cmdclose1.Top = 367
	Cmdclose1.ZOrderSet = 6
	C_solutions1.Left = 408
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 367
	Label1.Caption = "This sample demonstrates how to perform operations against MSN Messenger using the Messenger API and Windows Scripting Host. You can use these methods to automate sending of messages, email and files to any MSN user from your processes. "
	Label1.Height = 48
	Label1.Left = 18
	Label1.Name = "Label1"
	Label1.TabIndex = 3
	Label1.Top = 24
	Label1.Width = 480
	Label1.ZOrderSet = 4
	Label4.Name = "Label4"
	Label4.TabIndex = 2
	Label4.ZOrderSet = 5
	Shape2.Height = 60
	Shape2.Left = 12
	Shape2.Name = "Shape2"
	Shape2.Top = 12
	Shape2.Width = 492
	Shape2.ZOrderSet = 3

	ADD OBJECT 'cboBCC' AS combobox WITH ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 84, ;
		Name = "cboBCC", ;
		Sorted = .T., ;
		TabIndex = 13, ;
		Top = 203, ;
		Width = 353
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cboCC' AS combobox WITH ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 84, ;
		Name = "cboCC", ;
		Sorted = .T., ;
		TabIndex = 11, ;
		Top = 179, ;
		Width = 353
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cboContacts' AS combobox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 84, ;
		Name = "cboContacts", ;
		Sorted = .T., ;
		TabIndex = 9, ;
		Top = 155, ;
		Width = 353
		*< END OBJECT: BaseClass="combobox" />

	ADD OBJECT 'cmdGetFile' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "...", ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 442, ;
		Name = "cmdGetFile", ;
		TabIndex = 18, ;
		Top = 254, ;
		Width = 26, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdSend' AS commandbutton WITH ;
		AutoSize = .F., ;
		Caption = "\<Send", ;
		Default = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 443, ;
		Name = "cmdSend", ;
		TabIndex = 1, ;
		Top = 326, ;
		Width = 54, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command1' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "\<Auto SignIn", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 12, ;
		Name = "Command1", ;
		TabIndex = 4, ;
		Top = 80, ;
		Width = 72, ;
		ZOrderSet = 7
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command2' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "Sign \<Out", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 168, ;
		Name = "Command2", ;
		TabIndex = 6, ;
		Top = 80, ;
		Width = 57, ;
		ZOrderSet = 8
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Command3' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "Open \<Inbox", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 84, ;
		Name = "Command3", ;
		TabIndex = 5, ;
		Top = 80, ;
		Width = 73, ;
		ZOrderSet = 9
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtMessage' AS editbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 66, ;
		Left = 84, ;
		Name = "edtMessage", ;
		TabIndex = 20, ;
		Top = 282, ;
		Width = 353
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Label2' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "CC", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "Label2", ;
		TabIndex = 10, ;
		Top = 182, ;
		Width = 16
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label3' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "BCC", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "Label3", ;
		TabIndex = 12, ;
		Top = 205, ;
		Width = 23
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label5' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Subject", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "Label5", ;
		TabIndex = 14, ;
		Top = 228, ;
		Width = 45
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label6' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Message", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "Label6", ;
		TabIndex = 19, ;
		Top = 282, ;
		Width = 52
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'Label7' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "File", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "Label7", ;
		TabIndex = 16, ;
		Top = 257, ;
		Width = 21
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'lblEmail' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Email", ;
		FontBold = .T., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 22, ;
		Name = "lblEmail", ;
		TabIndex = 8, ;
		Top = 159, ;
		Width = 32
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'opgType' AS optiongroup WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		ButtonCount = 3, ;
		Height = 24, ;
		Left = 12, ;
		Name = "opgType", ;
		TabIndex = 7, ;
		Top = 120, ;
		Value = 1, ;
		Width = 288, ;
		Option1.AutoSize = .T., ;
		Option1.Caption = "Instant \<Message", ;
		Option1.FontName = "Tahoma", ;
		Option1.FontSize = 8, ;
		Option1.Height = 15, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 5, ;
		Option1.Value = 1, ;
		Option1.Width = 98, ;
		Option2.AutoSize = .T., ;
		Option2.Caption = "Send \<Email", ;
		Option2.FontName = "Tahoma", ;
		Option2.FontSize = 8, ;
		Option2.Height = 15, ;
		Option2.Left = 115, ;
		Option2.Name = "Option2", ;
		Option2.Top = 5, ;
		Option2.Width = 69, ;
		Option3.Caption = "Send \<File", ;
		Option3.FontName = "Tahoma", ;
		Option3.FontSize = 8, ;
		Option3.Height = 17, ;
		Option3.Left = 199, ;
		Option3.Name = "Option3", ;
		Option3.Top = 4, ;
		Option3.Width = 61
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		BackStyle = 0, ;
		Height = 244, ;
		Left = 12, ;
		Name = "Shape1", ;
		Style = 3, ;
		Top = 116, ;
		Width = 492, ;
		ZOrderSet = 0
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtFile' AS textbox WITH ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 84, ;
		Name = "txtFile", ;
		TabIndex = 17, ;
		Top = 255, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'txtSubject' AS textbox WITH ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 84, ;
		Name = "txtSubject", ;
		TabIndex = 15, ;
		Top = 227, ;
		Width = 353
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE addcontact
		LPARAMETERS strContact
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			Thisform.oMessenger.AddContact(0, strContact)
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
	ENDPROC

	PROCEDURE autosignin
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			Thisform.oMessenger.AutoSignin()
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
		
	ENDPROC

	PROCEDURE Destroy
		thisform.oMessenger = Null
		thisform.oWsh = Null
		CLEAR DLLS
		
		
	ENDPROC

	PROCEDURE getcontacts
		LOCAL nCount, i
		
		TRY
			nCount = Thisform.oMessenger.MyContacts.count
		
			FOR i = 0 TO nCount -1
				*-- Thisform.oMessenger.MyContacts.Item(i).FriendlyName returns the nice name,
				*-- but SignInName is needed for sending messages via the APIs.
				lcName = ALLTRIM(Thisform.oMessenger.MyContacts.Item(i).SignInName)
			    Thisform.cboContacts.AddItem(lcName)
		   	    Thisform.cboCC.AddItem(lcName)
		  	    Thisform.cboBCC.AddItem(lcName)
			ENDFOR
		
		CATCH TO loexc
			MESSAGEBOX(loexc.message)
		ENDTRY
	ENDPROC

	PROCEDURE getoleerror
		#DEFINE MSGR_E_ALREADY_LOGGED_ON 	VAL("0x81000304")
		#DEFINE	MSGR_E_NOT_LOGGED_ON 		VAL("0x8100031e")
		#DEFINE	E_INVALIDARG 				VAL("0x81000304")
		#DEFINE	MSGR_E_LOGON_UI_ACTIVE 		VAL("0x81000315")
		
		LPARAMETERS toException
		LOCAL lnHResult 
		LOCAL lcMessage
		lcMessage = "" 
		
		IF VARTYPE(toException) = "O"
			lnHResult =  VAL (SUBSTR(toException.Message, AT("0x", toException.Message ), 10) )
			
			DO CASE
				CASE lnHResult == MSGR_E_ALREADY_LOGGED_ON
					lcMessage= "The current user is already signed in."
				CASE lnHResult == E_INVALIDARG
					lcMessage = "Values provided failed validation tests. The sign-in name or password cannot contain spaces, carriage returns, or linefeed characters."
				CASE lnHResult == MSGR_E_NOT_LOGGED_ON
					lcMessage = "You must be logged into Messenger to perform this operation."
				CASE lnHResult == MSGR_E_LOGON_UI_ACTIVE
					lcMessage = "You cannot call the AutoSignin method while the client Sign In dialog box is enabled and visible."
				OTHERWISE 
					lcMessage = toException.Message
			ENDCASE
			
		ENDIF
		
		MESSAGEBOX(lcMessage,48,thisform.Caption)	
	ENDPROC

	PROCEDURE Init
		LOCAL llRetVal as Boolean
		LOCAL loExc as Exception
		llRetVal = .F.
		DODEFAULT()
		thisform.cboContacts.SetFocus() 
		TRY
			*------------------------------------------------------------------------------------------------------------------------
			*-- See http://msdn.microsoft.com/downloads/default.asp?url=/downloads/topic.asp?url=/msdn-files/028/001/359/topic.xml
			*-- for information on Messenger APIs. 
			*------------------------------------------------------------------------------------------------------------------------
			*-- This form is not meant as an alternate UI to Messenger. It is meant to
			*-- demonstrate the Messenger APIs you have access to via COM. You can 
			*-- use these methods to send automated Instant Messages, Email or Files 
			*-- to any MSN user from your automated processes. Additionally, if that user
			*-- has set up mobile messaging ( http://mobile.msn.com ), the email 
			*-- will be sent to their mobile device.
			*---------------------------------------------------------------------------
			Thisform.oMessenger = CREATEOBJECT("Messenger.UIAutomation.1")
		
			DECLARE LONG SetForegroundWindow IN WIN32API LONG
			DECLARE INTEGER FindWindow IN WIN32API STRING @ cClass, STRING @ cTitle
			DECLARE LONG CloseWindow IN WIN32API LONG
			DECLARE Sleep IN WIN32API long
			
			*-- We will use the Windows Scripting host to send key strokes so we can 
			*-- auto-compose messages and automate the messenger windows.
			Thisform.oWsh = CREATEOBJECT("wscript.Shell")
			
			*-- Add registered messenger contacts to the dropdown.
			*-- However, you can send messages to any MSN user by 
			*-- email address, they don't have to be in the contact list. 
			Thisform.GetContacts()
			
			llRetVal = .T.
			
		CATCH TO loExc
			llRetVal = .F.
			IF VARTYPE(thisform.oMessenger)!="O"
				MESSAGEBOX("There was a problem loading Windows Messenger. Make sure it is properly installed. This sample also requires that Windows Messenger 4.7 or higher be installed.", 48, Thisform.Caption) 
			ELSE
				MESSAGEBOX(loExc.Message, 16, Thisform.Caption) 
			ENDIF
		ENDTRY	
		
		
		RETURN llRetVal
	ENDPROC

	PROCEDURE instantmessage
		LPARAMETERS cContact, cMessage
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			oMessageWindow = Thisform.oMessenger.InstantMessage(cContact)
			SetForegroundWindow(oMessageWindow.HWND)
			
			Thisform.SendKeys(cMessage, .T.) 
			Thisform.SendKeys("{enter}") 
		
			*CloseWindow(oMessageWindow.HWND)
			oMessageWindow = .NULL.
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
		
		
	ENDPROC

	PROCEDURE openinbox
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			Thisform.oMessenger.OpenInbox()
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
	ENDPROC

	PROCEDURE sendfile
		LPARAMETERS cContact, cFilename
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY	
			oSendFileWindow = Thisform.oMessenger.SendFile(cContact, cFilename)
			Thisform.SendKeys("{Enter}")	
		
			oSendFileWindow.Close()
			oSendFileWindow = Null	
		
			llRetVal = .T.
		
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
				
		
		
	ENDPROC

	PROCEDURE sendkeys		&& Sends Keyboard output to the active window.
		LPARAMETERS tcKeys, tlIsLiteral
		LOCAL i, lcChar, lcKeys
		
		IF VARTYPE(thisform.oWsh ) = "O"
			IF tlIsLiteral
				*-- wrap special characters
				lcKeys = ""
				FOR i = 1 TO LEN(tcKeys)
					lcChar = SUBSTR(tcKeys,i,1)
					DO CASE
						CASE lcChar = "{" 
							lcKeys = lcKeys + "{{}"
						CASE lcChar = "}" 
							lcKeys= lcKeys + "{}}"
						OTHERWISE
							lcKeys = lcKeys + lcChar
					ENDCASE	
				ENDFOR	
				tcKeys = lcKeys	
				tcKeys= STRTRAN(tcKeys,"^","{^}")
				tcKeys= STRTRAN(tcKeys,"+","{+}")
				tcKeys= STRTRAN(tcKeys,"%","{%}")
				tcKeys= STRTRAN(tcKeys,"~","{~}")
				tcKeys= STRTRAN(tcKeys,"[","{[}")
				tcKeys= STRTRAN(tcKeys,"]","{]}")
			ENDIF
			
			*-- Send the keys to the active window.
			thisform.oWsh.SendKeys(tcKeys)
		ENDIF
	ENDPROC

	PROCEDURE sendmail
		LPARAMETERS cContact, cCCAddress, cBCCAddress, cSubject, cMessage
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY	
			Thisform.oMessenger.SendMail(cContact)
		
			*-- You may need to extend the wait time here if your connection is slow.	
			FOR i = 1 TO 20
				Sleep (1000)
				*-- Find the Internet Explorer Compose Email window. 
				wHandle = FindWindow(0, thisform.cComposeEmailWindowTitle)	
				IF wHandle > 0
					EXIT
				ENDIF
			ENDFOR		
			
			IF wHandle > 0
				*-- Bring IE window to front.
				SetForegroundWindow(whandle)
				Sleep (1000)
				
				*-- Enter the values automatically into the web page. 
				Thisform.SendKeys("{tab}")
				IF NOT EMPTY(cCCAddress) THEN
					Thisform.SendKeys(cCCAddress, .T.)
				ENDIF
				Thisform.SendKeys("{tab}")
		
				IF NOT EMPTY(cBCCAddress) THEN
					Thisform.SendKeys(cBCCAddress, .T.)
				ENDIF
				Thisform.SendKeys("{tab}")
		
				IF NOT EMPTY(cSubject) THEN
					Thisform.SendKeys(cSubject, .T.)
				ENDIF
				Thisform.SendKeys("{tab}")
				Thisform.SendKeys("{tab}")
				sleep (1000)
				Thisform.SendKeys("{tab}")
				sleep (1000)
				Thisform.SendKeys("^{home}")
				Thisform.SendKeys(cMessage, .T.)
				Thisform.SendKeys("{tab}")
				sleep (1000)
				Thisform.SendKeys("{enter}")
				sleep (1000)
				*-- Minimize the window
				CloseWindow(whandle)
				
				llRetVal = .T.
			
			ENDIF
				
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
				
	ENDPROC

	PROCEDURE signin
		LPARAMETERS cSigninName, cPassword
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			Thisform.oMessenger.Signin(0, cSigninName, cPassword)
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
	ENDPROC

	PROCEDURE signout
		LOCAL loExc as Exception
		LOCAL llRetVal as Boolean 
		llRetVal = .F.
		
		TRY
			Thisform.oMessenger.Signout()
			llRetVal = .T.
			
		CATCH TO loExc
			Thisform.GetOleError(loExc) 
		ENDTRY
		
		RETURN llRetVal
		
	ENDPROC

	PROCEDURE cmdGetFile.Click
		Thisform.txtFile.Value = GETFILE()
	ENDPROC

	PROCEDURE cmdSend.Click
		DO CASE
			CASE thisform.opgType.value = 2
				Thisform.SendMail(ALLTRIM(thisform.cboContacts.DisplayValue), ;
							ALLTRIM(thisform.cboCC.DisplayValue), ; 
							ALLTRIM(thisform.cboBCC.DisplayValue), ;
							ALLTRIM(thisform.txtSubject.Value), ;
							thisform.edtMessage.Value)
			CASE thisform.opgType.value = 3
				Thisform.SendFile(ALLTRIM(thisform.cboContacts.DisplayValue), ;
							ALLTRIM(thisform.txtFile.Value)	)
				
			OTHERWISE
				Thisform.InstantMessage(ALLTRIM(thisform.cboContacts.DisplayValue), ;
									thisform.edtMessage.Value)
		ENDCASE	
	ENDPROC

	PROCEDURE Command1.Click
		THisform.Autosignin()
		Thisform.GetContacts()
	ENDPROC

	PROCEDURE Command2.Click
		THisform.Signout()
	ENDPROC

	PROCEDURE Command3.Click
		THisform.Openinbox() 
	ENDPROC

	PROCEDURE opgType.InteractiveChange
		DO CASE	
			CASE this.Value = 2
				thisform.cboCC.Enabled = .T.
				thisform.cboBCC.Enabled = .T.
				thisform.txtSubject.Enabled = .T.
				thisform.txtFile.Enabled = .F.
				thisform.cmdGetFile.Enabled = .F.
				thisform.edtMessage.Enabled = .T.		
			CASE this.Value = 3
				thisform.cboCC.Enabled = .F.
				thisform.cboBCC.Enabled = .F.
				thisform.txtSubject.Enabled = .F.
				thisform.txtFile.Enabled = .T.
				thisform.cmdGetFile.Enabled = .T.		
				thisform.edtMessage.Enabled = .F.		
			OTHERWISE
				thisform.cboCC.Enabled = .F.
				thisform.cboBCC.Enabled = .F.
				thisform.txtSubject.Enabled = .F.
				thisform.txtFile.Enabled = .F.
				thisform.cmdGetFile.Enabled = .F.
				thisform.edtMessage.Enabled = .T.
		ENDCASE
	ENDPROC

ENDDEFINE
