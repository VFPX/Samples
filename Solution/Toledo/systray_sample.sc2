*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="systray_sample.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS form1 AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="pgfSystraySample" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBasics.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBasics.Edit1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBasics.Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBasics.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBasics.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgAnimation.Timer1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgAnimation.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgAnimation.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.cmdShowBalloonTip" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.edtBalloonText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.txtBalloonTitle" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.spnTimeOut" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.opgStandardIcon" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgBallloonTips.Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus1.txtMenuText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus1.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus1.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus1.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus1.Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus2.txtMenuText" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus2.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus2.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus2.Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus2.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus3.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgMenus3.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgDoubleClick.Timer1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgDoubleClick.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgDoubleClick.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.txtIconFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.Command1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.Command2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.SysTray1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfSystraySample.pgIcon.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSystrayEvent" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtHelp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="_shellexecute1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: setinstructiontext
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	Caption = "System Tray Icon example"
	DoCreate = .T.
	Height = 405
	HelpContextID = 1231687
	MaxButton = .F.
	Name = "Form1"
	ShowTips = .T.
	Width = 664
	Behindscenes1.Left = 6
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.TabIndex = 2
	Behindscenes1.Top = 370
	Behindscenes1.ZOrderSet = 3
	Cmdclose1.Left = 585
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 3
	Cmdclose1.Top = 372
	Cmdclose1.ZOrderSet = 4
	C_solutions1.Left = 522
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 372
	Label1.Height = 12
	Label1.Left = 18
	Label1.Name = "Label1"
	Label1.TabIndex = 4
	Label1.Top = 24
	Label1.Visible = .F.
	Label1.Width = 132
	Label1.ZOrderSet = 0
	Label4.BackStyle = 0
	Label4.Left = 20
	Label4.Name = "Label4"
	Label4.TabIndex = 6
	Label4.Top = 39
	Label4.Visible = .F.
	Label4.ZOrderSet = 7
	Shape2.Height = 175
	Shape2.Left = 13
	Shape2.Name = "Shape2"
	Shape2.Top = 47
	Shape2.Width = 638
	Shape2.ZOrderSet = 8

	ADD OBJECT '_shellexecute1' AS _shellexecute WITH ;
		Left = 60, ;
		Name = "_shellexecute1", ;
		Top = 367
		*< END OBJECT: ClassLib="..\..\..\ffc\_environ.vcx" BaseClass="custom" />

	ADD OBJECT 'edtHelp' AS editbox WITH ;
		BackStyle = 0, ;
		BorderStyle = 0, ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 160, ;
		Left = 18, ;
		Margin = 0, ;
		Name = "edtHelp", ;
		ReadOnly = .T., ;
		ScrollBars = 0, ;
		TabIndex = 5, ;
		TabStop = .F., ;
		Top = 56, ;
		Width = 627, ;
		ZOrderSet = 9
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Last System Tray Icon Event:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 122, ;
		Name = "Label1", ;
		TabIndex = 7, ;
		Top = 354, ;
		Width = 168, ;
		ZOrderSet = 5
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample' AS pageframe WITH ;
		ErasePage = .T., ;
		Height = 344, ;
		Left = 6, ;
		Name = "pgfSystraySample", ;
		PageCount = 8, ;
		TabIndex = 1, ;
		Top = 4, ;
		Width = 654, ;
		ZOrderSet = 1, ;
		Page1.Caption = "Basics", ;
		Page1.FontName = "Tahoma", ;
		Page1.FontSize = 8, ;
		Page1.Name = "pgBasics", ;
		Page1.PageOrder = 1, ;
		Page2.Caption = "Icon Animation", ;
		Page2.FontName = "Tahoma", ;
		Page2.FontSize = 8, ;
		Page2.Name = "pgAnimation", ;
		Page2.PageOrder = 3, ;
		Page3.Caption = "Balloon Tips", ;
		Page3.FontName = "Tahoma", ;
		Page3.FontSize = 8, ;
		Page3.Name = "pgBallloonTips", ;
		Page3.PageOrder = 4, ;
		Page4.Caption = "Menus 1", ;
		Page4.FontName = "Tahoma", ;
		Page4.FontSize = 8, ;
		Page4.Name = "pgMenus1", ;
		Page4.PageOrder = 5, ;
		Page5.Caption = "Menus 2", ;
		Page5.FontName = "Tahoma", ;
		Page5.FontSize = 8, ;
		Page5.Name = "pgMenus2", ;
		Page5.PageOrder = 6, ;
		Page6.Caption = "Menus 3", ;
		Page6.FontName = "Tahoma", ;
		Page6.FontSize = 8, ;
		Page6.Name = "pgMenus3", ;
		Page6.PageOrder = 7, ;
		Page7.Caption = "Double-click", ;
		Page7.FontName = "Tahoma", ;
		Page7.FontSize = 8, ;
		Page7.Name = "pgDoubleClick", ;
		Page7.PageOrder = 8, ;
		Page8.Caption = "Icon", ;
		Page8.FontName = "Tahoma", ;
		Page8.FontSize = 8, ;
		Page8.Name = "pgIcon", ;
		Page8.PageOrder = 2
		*< END OBJECT: BaseClass="pageframe" />

	ADD OBJECT 'pgfSystraySample.pgAnimation.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 389, ;
		Name = "Label3", ;
		Top = 284, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgAnimation.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		Name = "SysTray1", ;
		tiptext = Animated Icons, ;
		Top = 284
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgAnimation.Timer1' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = 500, ;
		Left = 617, ;
		Name = "Timer1", ;
		Top = 248, ;
		Width = 23
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.cmdShowBalloonTip' AS commandbutton WITH ;
		Caption = "Show Balloon Tip!", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 30, ;
		Left = 448, ;
		Name = "cmdShowBalloonTip", ;
		TabIndex = 9, ;
		ToolTipText = "On Windows ME/2000, a taskbar icon can have multiple balloon tips, with new tips being drawn underneath the existing one.  On Windows XP and later, a new balloon tip will release the existing balloon.", ;
		Top = 253, ;
		Width = 123, ;
		WordWrap = .T.
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.edtBalloonText' AS editbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 43, ;
		Left = 79, ;
		Name = "edtBalloonText", ;
		TabIndex = 2, ;
		ToolTipText = "Set to empty string to clear existing balloon tip.", ;
		Top = 217, ;
		Value = On Windows ME/XP and later, you can click in this balloon, and see the event recorded on the form!  Balloon events aren't supported on Windows 2000., ;
		Width = 235
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.Label1' AS label WITH ;
		Caption = " Icon", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 339, ;
		Name = "Label1", ;
		Style = 3, ;
		TabIndex = 5, ;
		Top = 203, ;
		Width = 26
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.Label2' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Balloon Text", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 79, ;
		Name = "Label2", ;
		TabIndex = 1, ;
		Top = 202, ;
		Width = 90
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Balloon Title", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 79, ;
		Name = "Label3", ;
		TabIndex = 3, ;
		Top = 264, ;
		Width = 96
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.Label4' AS label WITH ;
		BackStyle = 0, ;
		Caption = "TimeOut (in Seconds)", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 448, ;
		Name = "Label4", ;
		TabIndex = 7, ;
		Top = 202, ;
		Width = 120
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.Label5' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 15, ;
		Left = 395, ;
		Name = "Label5", ;
		TabIndex = 10, ;
		Top = 293, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.opgStandardIcon' AS optiongroup WITH ;
		BackStyle = 0, ;
		ButtonCount = 4, ;
		Height = 84, ;
		Left = 333, ;
		Name = "opgStandardIcon", ;
		TabIndex = 6, ;
		ToolTipText = "", ;
		Top = 211, ;
		Value = 2, ;
		Width = 96, ;
		Option1.BackStyle = 0, ;
		Option1.Caption = "0 (None)", ;
		Option1.FontName = "Tahoma", ;
		Option1.FontSize = 8, ;
		Option1.Height = 17, ;
		Option1.Left = 5, ;
		Option1.Name = "Option1", ;
		Option1.Top = 7, ;
		Option1.Value = 0, ;
		Option1.Width = 85, ;
		Option2.BackStyle = 0, ;
		Option2.Caption = "1 (Info)", ;
		Option2.FontName = "Tahoma", ;
		Option2.FontSize = 8, ;
		Option2.Height = 17, ;
		Option2.Left = 5, ;
		Option2.Name = "Option2", ;
		Option2.Top = 26, ;
		Option2.Value = 1, ;
		Option2.Width = 85, ;
		Option3.BackStyle = 0, ;
		Option3.Caption = "2 (Warning)", ;
		Option3.FontName = "Tahoma", ;
		Option3.FontSize = 8, ;
		Option3.Height = 17, ;
		Option3.Left = 5, ;
		Option3.Name = "Option3", ;
		Option3.Top = 45, ;
		Option3.Width = 88, ;
		Option4.BackStyle = 0, ;
		Option4.Caption = "3 (Error)", ;
		Option4.FontName = "Tahoma", ;
		Option4.FontSize = 8, ;
		Option4.Height = 17, ;
		Option4.Left = 5, ;
		Option4.Name = "Option4", ;
		Option4.Top = 64, ;
		Option4.Width = 85
		*< END OBJECT: BaseClass="optiongroup" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.spnTimeOut' AS spinner WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		KeyboardHighValue = 30, ;
		KeyboardLowValue = 10, ;
		Left = 448, ;
		Name = "spnTimeOut", ;
		SpinnerHighValue = 30.00, ;
		SpinnerLowValue = 10.00, ;
		TabIndex = 8, ;
		ToolTipText = "Timeout may be extended by the OS if the user isn't doing anything. Keep the mouse moving when testing the timeout parameter.", ;
		Top = 217, ;
		Value = 30, ;
		Width = 120
		*< END OBJECT: BaseClass="spinner" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 620, ;
		Name = "SysTray1", ;
		tiptext = Sample demonstrating Balloon Tips, ;
		Top = 285
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgBallloonTips.txtBalloonTitle' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 79, ;
		Name = "txtBalloonTitle", ;
		TabIndex = 4, ;
		ToolTipText = "Balloon Title is limited to 63 characters.", ;
		Top = 279, ;
		Value = Visual FoxPro Sample, ;
		Width = 235
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfSystraySample.pgBasics.Command2' AS commandbutton WITH ;
		Caption = "Update", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 290, ;
		Name = "Command2", ;
		TabIndex = 3, ;
		Top = 287, ;
		Width = 70
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgBasics.Edit1' AS editbox WITH ;
		ControlSource = "This.Parent.SysTray1.Tiptext", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 64, ;
		Left = 101, ;
		MaxLength = 256, ;
		Name = "Edit1", ;
		TabIndex = 2, ;
		ToolTipText = "TipText is limited to 63 characters and only one line on Win98 and NT4, and limited to 127 characters on later operating systems.", ;
		Top = 219, ;
		Width = 447
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'pgfSystraySample.pgBasics.Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Modify the Tiptext property here, then move your mouse over the System Tray icon", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 102, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 203, ;
		Width = 446
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBasics.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 394, ;
		Name = "Label3", ;
		TabIndex = 4, ;
		Top = 286, ;
		Visible = .F., ;
		Width = 221
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgBasics.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 618, ;
		Name = "SysTray1", ;
		tiptext = ("This is a sample tip" + CHR(13) + CHR(10) + "with multiple lines."), ;
		Top = 286
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgDoubleClick.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 389, ;
		Name = "Label3", ;
		Top = 286, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgDoubleClick.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		menuoffsetfromright = 175, ;
		menutext = Systray_Shortcut.mpr, ;
		menutextismpr = .T., ;
		Name = "SysTray1", ;
		tiptext = This is a sample of supporting both Click and DblClick events., ;
		Top = 286
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgDoubleClick.Timer1' AS timer WITH ;
		Enabled = .F., ;
		Height = 23, ;
		Interval = ( _dblclick * 1000), ;
		Left = 617, ;
		Name = "Timer1", ;
		Top = 245, ;
		Width = 24
		*< END OBJECT: BaseClass="timer" />

	ADD OBJECT 'pgfSystraySample.pgIcon.Command1' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 558, ;
		Name = "Command1", ;
		TabIndex = 3, ;
		ToolTipText = "Browse for icon", ;
		Top = 224, ;
		Width = 25
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgIcon.Command2' AS commandbutton WITH ;
		Caption = "Update", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command2", ;
		TabIndex = 4, ;
		Top = 256, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgIcon.Label2' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Icon File:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 14, ;
		Left = 68, ;
		Name = "Label2", ;
		TabIndex = 1, ;
		Top = 209, ;
		Width = 90
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgIcon.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 389, ;
		Name = "Label3", ;
		TabIndex = 5, ;
		Top = 285, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgIcon.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		Name = "SysTray1", ;
		tiptext = This is the sample of changing the icon., ;
		Top = 285
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgIcon.txtIconFile' AS textbox WITH ;
		ControlSource = "this.Parent.systray1.iconfile", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 66, ;
		Name = "txtIconFile", ;
		TabIndex = 2, ;
		Top = 224, ;
		Width = 490
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfSystraySample.pgMenus1.Command2' AS commandbutton WITH ;
		Caption = "Update", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command2", ;
		TabIndex = 3, ;
		Top = 260, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgMenus1.Label1' AS label WITH ;
		BackStyle = 0, ;
		Caption = "Systray.MenuText", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 58, ;
		Name = "Label1", ;
		TabIndex = 1, ;
		Top = 214, ;
		Width = 276
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgMenus1.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 394, ;
		Name = "Label3", ;
		TabIndex = 4, ;
		Top = 288, ;
		Visible = .F., ;
		Width = 219
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgMenus1.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		menuoffsetfromright = 130, ;
		menutext = 1;Menu Bar One;2;Menu Bar Two;3;Menu Bar Three, ;
		menutextismpr = .F., ;
		Name = "SysTray1", ;
		tiptext = Sample demonstrating simple menus and processing selection, ;
		Top = 284
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgMenus1.txtMenuText' AS textbox WITH ;
		ControlSource = "this.Parent.Systray1.MenuText", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 58, ;
		Name = "txtMenuText", ;
		TabIndex = 2, ;
		Top = 231, ;
		Width = 534
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfSystraySample.pgMenus2.Command1' AS commandbutton WITH ;
		Caption = "...", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 553, ;
		Name = "Command1", ;
		TabIndex = 3, ;
		ToolTipText = "Browse for icon", ;
		Top = 208, ;
		Width = 25
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgMenus2.Command2' AS commandbutton WITH ;
		Caption = "Update", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 295, ;
		Name = "Command2", ;
		TabIndex = 3, ;
		Top = 239, ;
		Width = 60
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'pgfSystraySample.pgMenus2.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 392, ;
		Name = "Label3", ;
		TabIndex = 2, ;
		Top = 288, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgMenus2.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		menuoffsetfromright = 175, ;
		menutext = (ADDBS(JUSTPATH(SYS(1271, thisform)))+"Systray_Shortcut.mpr"), ;
		menutextismpr = .T., ;
		Name = "SysTray1", ;
		tiptext = This is an example of displaying a more complex Visual FoxPro shortcut menu., ;
		Top = 284
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'pgfSystraySample.pgMenus2.txtMenuText' AS textbox WITH ;
		ControlSource = "this.Parent.systray1.MenuText", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 71, ;
		Name = "txtMenuText", ;
		TabIndex = 1, ;
		Top = 209, ;
		Width = 480
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'pgfSystraySample.pgMenus3.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "This is the systray class ---->", ;
		FontBold = .T., ;
		FontName = "Courier New", ;
		ForeColor = 255,0,0, ;
		Height = 17, ;
		Left = 391, ;
		Name = "Label3", ;
		Top = 289, ;
		Visible = .F., ;
		Width = 222
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'pgfSystraySample.pgMenus3.SysTray1' AS systray WITH ;
		addicontosystrayatinit = .F., ;
		iconfile = (HOME() + "Graphics\Icons\Misc\Face02.ico"), ;
		Left = 617, ;
		menuoffsetfromright = 175, ;
		Name = "SysTray1", ;
		tiptext = ("A complex example demonstrating passing parameters by reference to the MPR,"+ CHR(13) + "and changing the values in the MPR."), ;
		Top = 284
		*< END OBJECT: ClassLib="systray.vcx" BaseClass="hyperlink" />

	ADD OBJECT 'txtSystrayEvent' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 122, ;
		Name = "txtSystrayEvent", ;
		ReadOnly = .T., ;
		TabIndex = 8, ;
		Top = 371, ;
		Width = 420, ;
		ZOrderSet = 6
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE Init
		#DEFINE MSG_NOGRAPHICS_LOC	"It does not appear that you have the Graphics directory properly installed. This directory is needed for this sample to run."
		DODEFAULT()
		IF !FILE(HOME()+"Graphics\Icons\Misc\Face02.ico")
			MESSAGEBOX(MSG_NOGRAPHICS_LOC)
		ENDIF
		this.Icon = THISFORM.pgfSystraySample.pgBasics.systray1.iconfile
		
	ENDPROC

	PROCEDURE setinstructiontext
		LPARAMETERS nPage As Integer 
		LOCAL lnPage As Integer 
		LOCAL lcText As String 
		lnPage = IIF(EMPTY(nPage) OR VARTYPE(nPage)!="N",0,nPage)
		
		DO CASE
			CASE lnPage = 1
				TEXT TO thisform.edtHelp.Value NOSHOW
		This sample form demonstrates most of the features of the Systray class. You'll notice a new icon in your Taskbar Notification Area. Try clicking on the icon now, and see the event displayed at the bottom of this form.
		
		The class library SYSTRAY.VCX contains the Systray class. This class provides support for using the Taskbar Notification Area (commonly referred to as the System Tray). You can place an icon in the system tray, and receive events from that icon, without the need for external C++ libraries. Systray also provides very flexible options for displaying shortcut menus for the icon.  You can also display Balloon Tips, if the operating system supports them.
		
		To keep the examples simple, each page of this sample has its own copy of the Systray class, with only the properties and code necessary for that example. The first example is modifying the TipText property:
				ENDTEXT
		
			CASE lnPage = 2
				TEXT TO  thisform.edtHelp.Value NOSHOW
		Change the IconFile property using the controls below, and see the icon change in the taskbar.
		
		The IconFile property is the path and filename of an icon to display in the Taskbar Notification Area.  Changing the IconFile property updates the screen immediately, and clears any list of icons used for animation.
			ENDTEXT
		
			CASE lnPage = 3
				TEXT TO thisform.edtHelp.Value NOSHOW
		The icon in the System Tray is now animated!
		
		Animation is achieved by loading multiple icons and displaying them in sequence.
		
		To animate your System Tray icon:
			1.  Clear the icon list using the ClearIconList() method.
			2.  Load each icon, in order, using the AddIconToIconList() method. 
			3.  Use a timer object to call the SwitchIcon() method at regular intervals.
			
		In this example, the activate event of this page loads all the "MOON*.ICO" icons from sample graphics folder. Then a timer is enabled, which calls the SwitchIcon method every 500 milliseconds.
				ENDTEXT
		
			CASE lnPage = 4
				TEXT TO thisform.edtHelp.Value NOSHOW
		Click the Show Balloon Tip button in the lower right corner of this page!
		
		Balloon tips are supported on Windows ME, Windows 2000, and later. They can be displayed by calling the Systray.ShowBalloonTip() method. 
		
		The ShowBalloonTip method accepts four parameters, and only the first is required.
		   cBalloonText  - The text to display in the balloon.  To clear a balloon, set to empty string.
		   cBalloonTitle - The text to display in the titlebar of the balloon. May be empty string.
		   nIcon   - Which standard icon to display next to the text.
		   nTimeout  - Time (in seconds) to display the balloon. Subject to OS minimum and maximum values, and user activity.
				ENDTEXT
		
			CASE lnPage = 5
				TEXT TO thisform.edtHelp.Value NOSHOW
		Click on the System Tray icon to see a menu.
		
		The Systray class supports several options for creating and displaying menus.  The simplest is shown on this page.  All you do is set the MenuText property to a string containing the text for each menu item, and a numeric id for each item. The numeric ID comes first, and items are separated by semicolons, as in the sample below. 
		
		By default, clicking the icon will display the menu. You can change this behavior by overriding the IconClickEvent and IconRightClickEvent methods. The menu can also be displayed by calling the ShowMenu method.
		
		After a menu item has been selected or the menu is cleared, Systray.ProcessMenuEvent() occurs, with one parameter containing the ID of the item that was clicked.
				ENDTEXT
		
				
			CASE lnPage = 6
				TEXT TO thisform.edtHelp.Value NOSHOW
		Click on the System Tray icon to see a more complex menu!
		
		This example calls a regular Visual FoxPro shortcut menu (.MPR), created using the Menu Designer.
		
		To enable this in your code, set the MenuText property to the path and filename of the .MPR file generated by the Menu Designer.  Then set the MenuTextIsMPR property to .T.
		
		So all you had to do was drop the Systray class on your form, and modify the IconFile, MenuText, and MenuTextIsMPR properties. When you run the form, the icon is automatically added to the System Tray.
				ENDTEXT
					
			
			CASE lnPage = 7
				TEXT TO thisform.edtHelp.Value NOSHOW
		This page demonstrates the passing of parameters (by reference) to the menu.  Click the icon now, and select an item from the menu.  A "WAIT WINDOW" will appear, describing which item you chose.
		
		This is done by passing parameters to the ShowMenu() method.  The first parameter is the .MPR file to use (over-riding the contents of the MenuText property). Up to four more parameters can be specified, which will be passed, by reference, to the menu. (The menu must have a PARAMETERS statement in its Setup code.)
		
		When you click the icon with this page active, it runs the following code:
		
			LOCAL cMyParam
			cMyParam = "Original Contents"
			THIS.ShowMenu("Systray_Shortcut.MPR", @cMyParam)	
			WAIT WINDOW cMyParam NOWAIT		&& Show that cMyParam was changed.
		
		To fully understand this example, you'll want to view and modify the Systray_Shortcut menu, especially the setup code. Open Sample_Shortcut.MNX in the menu designer. From the View menu, choose General Options.  Click the Setup checkbox, and click OK.
		
		ENDTEXT
					
			CASE lnPage = 8
				TEXT TO thisform.edtHelp.Value NOSHOW
		Try clicking and double-clicking on the icon.
		
		In any application, supporting different behaviors for both Click and Double-Click events can be cumbersome. (If the Click event creates a modal condition such as a menu, the Double-Click never occurs.) Using a Systray icon is no different.
		
		To support both events cleanly, you must use a timer.  When a Click event occurs, it enables the timer. If the timer event then fires with no subsequent events from the Systray icon, it executes whatever you would normally put in the Click event. But if a Double-Click arrives before the timer expires, the Double-Click action can be performed, and the single Click event can be ignored.
		
		On this page, there are a Timer object and a Systray object that work together to manage the Click and Double-click events. 
		ENDTEXT
				
			OTHERWISE	
				thisform.edtHelp.Value = ""
		ENDCASE
	ENDPROC

	PROCEDURE Behindscenes1.Click
		LOCAL lcFile
		lcFile = thisform.cRunPath+"systray_readme.htm"
		IF FILE(lcFile)
			thisform._shellexecute1.shellexecute(lcFile,thisform.cRunPath,"Open")
		ENDIF	
		
	ENDPROC

	PROCEDURE Cmdclose1.Click
		CLEAR EVENTS 
		DODEFAULT()
	ENDPROC

	PROCEDURE edtHelp.Init
		TEXT TO THIS.Value NOSHOW
		This sample form demonstrates most of the features of the Systray class. You'll notice a new icon in your Taskbar Notification Area. Try clicking on the icon now, and see the event displayed at the bottom of this form.
		
		The class library SYSTRAY.VCX contains the Systray class. This class provides support for using the Taskbar Notification Area (commonly referred to as the System Tray). You can place an icon in the system tray, and receive events from that icon, without the need for external C++ libraries. Systray also provides very flexible options for displaying shortcut menus for the icon.  You can also display Balloon Tips, if the operating system supports them.
		
		To keep the examples simple, each page of this sample has its own copy of the Systray class, with only the properties and code necessary for that example. The first example is modifying the TipText property:
		ENDTEXT
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.Activate
		*  Load up a set of icons, and start the timer.
		
		LOCAL lcPathToIcons, nIcons, aIconFiles[1], nCurrentIcon
		
		lcPathToIcons = HOME() + "GRAPHICS\ICONS\ELEMENTS\"
		nIcons = ADIR(aIconFiles, lcPathToIcons + "MOON*.ICO")
		IF m.nIcons = 0
			MESSAGEBOX("No icons in folder '" + lcPathToIcons + "'")
			RETURN
		ENDIF
		
		ASORT(m.aIconFiles)
		
		WITH THIS.Systray1
			.ClearIconList()
			FOR nCurrentIcon = 1 TO m.nIcons
				.AddIconToIconList(lcPathToIcons + aIconFiles[nCurrentIcon, 1])
			ENDFOR
			.AddIconToSystray
			THIS.Timer1.Enabled = .t.
		ENDWITH
		
		Thisform.SetInstructionText(THIS.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.Deactivate
		THIS.Timer1.Enabled = .F.
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgAnimation.Timer1.Timer
		this.Parent.systray1.switchicon()
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		IF THIS.Systray1.ShellVersion < 5
			* Doesn't support balloons.
			WITH THIS
			.cmdShowBalloonTip.Enabled = .F.
			.cmdShowBalloonTip.Caption = "Balloon Tips not " + CHR(13) + CHR(10) + "supported on this OS."
			ENDWITH
		ENDIF
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.cmdShowBalloonTip.Click
		WITH THIS.Parent
		.Systray1.ShowBalloonTip(.edtBalloonText.Value, ;
								.txtBalloonTitle.Value, ;
								.opgStandardIcon.Value - 1, ;
								.spnTimeOut.Value)
		ENDWITH
		
								
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.Deactivate
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.balloonclickevent
		THISFORM.txtSystrayEvent.Value = "Balloon Click"
		WAIT WINDOW "You clicked the balloon!" NOWAIT
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.balloonhideevent
		THISFORM.txtSystrayEvent.Value = "Balloon was closed by unknown system event."
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.balloonshowevent
		THISFORM.txtSystrayEvent.Value = "Balloon has been displayed"
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.balloontimeoutevent
		THISFORM.txtSystrayEvent.Value = "Balloon timed out or was closed by user."
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBallloonTips.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.Command2.Click
		* This button is a placebo.  It is only here to allow focus to
		* move away from the textboxes, thereby allowing the textboxes to
		* update their controlsources, which are properties on the Systray 
		* object.  Whenever those properties have a value assigned to them,
		* they update the System Tray icon immediately.
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.Deactivate
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.SysTray1.icondblclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgBasics.SysTray1.iconrightclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.Deactivate
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
		* To support both click and double-click, we use a timer
		* It is the timer that calls ShowMenu.
		* We're in this code because we've received a Click event.
		* Enable the timer. When it times out, it will call ShowMenu.
		* If a DoubleClick event occurs, the timer will be disabled.
		* (See the IconDblClickEvent method on this object.)
		WITH THIS.Parent.Timer1
		IF .Enabled = .F.	&& Not waiting for an event.
			.Comment = "CLICK"	&& Store the name of the event.
			.Enabled = .T.
		ELSE
			&& The timer is also used AFTER the double-click, because
			&& the Shell also sends the second Click event message after
			&& it sends the Double-click message.
			
			&& The timer is enabled.  If it is a DOUBLE-CLICK, then this event
			&& should be discarded.
			IF .Comment != "DOUBLE-CLICK"
				* It wasn't a double-click. So the previous event wasn't a click.
				.Comment = "CLICK"
				.Enabled = .F.	&& Reset the timer.
				.Enabled = .T.	
			ENDIF
		ENDIF
		ENDWITH
		* If no double-click event occurs, then the timer event will fire.
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
		* To support both click and double-click, we use a timer
		* It is the timer that calls ShowMenu.
		* We're in this code because we've received a Click event.
		* Enable the timer. When it times out, it will call ShowMenu.
		* If a DoubleClick event occurs, the timer will be disabled.
		* (See the IconDblClickEvent method on this object.)
		WITH THIS.Parent.Timer1
		IF .Enabled = .T.	&& Waiting for an event.
			.Enabled = .F.	&& Disable timer to discard previous click event.
			.Comment = ""	&& Clear the name of the event.
		ENDIF
		ENDWITH
		
		* We've stopped the previous Click from being acted upon. Unfortunately,
		* after a DblClick event is received, the MouseUp of the second click is
		* received, which triggers another click event.
		* Now perform an action
		MESSAGEBOX("The icon received a DoubleClick event!", 0, "Systray Example")
		
		* Now must reset the timer, so we can ignore the second Click event that
		* the system sends AFTER the Double-click event.
		WITH THIS.Parent.Timer1
			.Comment = "DOUBLE-CLICK"	&& Clear the name of the event.
			.Enabled = .T.	&& Waiting for an event.
		ENDWITH
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
		* To support both click and double-click, we use a timer
		* It is the timer that calls ShowMenu.
		
		* We're in this code because we've received a Click event.
		* Enable the timer. When it times out, it will call ShowMenu.
		* If a DoubleClick event occurs, the timer will be disabled.
		* To fully understand this, also look at the IconDblClickEvent
		* method on this object, and the Timer1.Timer event on the 
		* Double-Click page of the pageframe.
		WITH THIS.Parent.Timer1
		IF .Enabled = .F.	&& Timer is not waiting for a second event.
			.Comment = "CLICK"	&& Store the name of the this event that started
								&& the timeout period.
			.Enabled = .T.		&& Start waiting for a second event.
			* If no double-click event occurs, then the timer event will fire.
		ELSE
			&& The timer is also used to provide a timeout period
			&& AFTER the double-click.  This is because the Shell 
			&& also sends the second Click event message after
			&& it sends the Double-click message.
			
			&& The timer is currently enabled.  If it has just executed
			&& a DOUBLE-CLICK, then this event should be discarded.
			IF .Comment != "DOUBLE-CLICK"
				* It wasn't a double-click. So the previous event wasn't a click.
				.Comment = "CLICK"
				.Enabled = .F.	&& Reset the timer.
				.Enabled = .T.	
			ENDIF
		ENDIF
		ENDWITH
	ENDPROC

	PROCEDURE pgfSystraySample.pgDoubleClick.Timer1.Timer
		THIS.Enabled = .F.
		
		IF THIS.Comment = "CLICK"
			THIS.Comment = ""
			THIS.Parent.Systray1.ShowMenu()
		ELSE
			* Must be a double-click timeout.
			THIS.Comment = ""
		ENDIF
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.Command1.Click
		LOCAL lcFile, lcOldFolder
		lcOldFolder = FULLPATH(CURDIR())
		CD (HOME() + "Graphics\icons\misc")
		
		lcFile = ""
		lcFile = GETFILE("ICO", "Select icon file", "Open", 1, "Systray sample")
		
		IF ! ISBLANK(m.lcFile) AND FILE(m.lcFile)
			THIS.Parent.Systray1.IconFile = m.lcFile
			thisform.Icon = m.lcFile
			this.Parent.txtIconFile.Refresh
		ENDIF
		CD (lcOldFolder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.Command2.Click
		* This button is a placebo.  It is only here to allow focus to
		* move away from the textboxes, thereby allowing the textboxes to
		* update their controlsources, which are properties on the Systray 
		* object.  Whenever those properties have a value assigned to them,
		* they update the System Tray icon immediately.
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.Deactivate
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgIcon.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.Command2.Click
		* This button is a placebo.  It is only here to allow focus to
		* move away from the textboxes, thereby allowing the textboxes to
		* update their controlsources, which are properties on the Systray 
		* object.  Whenever those properties have a value assigned to them,
		* they update the System Tray icon immediately.
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.Deactivate
		THIS.Systray1.RemoveIconFromSystray
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.SysTray1.iconclickevent
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		DODEFAULT()
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus1.SysTray1.processmenuevent
		LPARAMETERS nMenuItemID
		* Display the ID of the selected menu item.
		WAIT WINDOW "Menu selection: " + TRANSFORM(nMenuItemID) NOWAIT
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.Command1.Click
		LOCAL lcFile, lcOldFolder
		lcOldFolder = FULLPATH(CURDIR())
		
		lcFile = ""
		lcFile = GETFILE("MPR", "Select menu file", "Open", 1, "Systray sample")
		
		IF ! ISBLANK(m.lcFile) AND FILE(m.lcFile)
			THIS.Parent.txtMenuText.Value = m.lcFile
		ENDIF
		
		CD (lcOldFolder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.Command2.Click
		* This button is a placebo.  It is only here to allow focus to
		* move away from the textboxes, thereby allowing the textboxes to
		* update their controlsources, which are properties on the Systray 
		* object.  Whenever those properties have a value assigned to them,
		* they update the System Tray icon immediately.
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.Deactivate
		
		THIS.Systray1.RemoveIconFromSystray
		
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.SysTray1.Init
		
		This.Menutext = ADDBS(JUSTPATH(SYS(1271, thisform)))+"Systray_Shortcut.mpr"
		DODEFAULT()
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus2.SysTray1.processmenuevent
		LPARAMETERS nMenuItemID
		* Note that in this example, this method never gets called.
		* This method is only called when using the simple menu described
		* in the Menus 1 example.
		WAIT WINDOW "Menu selection: " + TRANSFORM(nMenuItemID) nowait
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.Activate
		* The AddIconToSystrayOnInit property is .F. (otherwise we'd all the icons from each
		* page of this sample being displayed at once).  Therefore, we must call the 
		* AddIconToSystray method manually:
		THIS.Systray1.AddIconToSystray
		
		Thisform.edtHelp.Height = 220
		Thisform.Shape2.Height = 235
		Thisform.SetInstructionText(this.pageorder)
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.Deactivate
		
		THIS.Systray1.RemoveIconFromSystray
		Thisform.edtHelp.Height = 160
		Thisform.Shape2.Height = 175
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.SysTray1.iconclickevent
		*  Display event on form.
		THISFORM.txtSystrayEvent.Value = "Click"
		THISFORM.Paint
		
		* Default behavior for IconClickEvent and IconRightClickEvent
		* is to call ShowMenu().  By placing code in this method,
		* we're overriding the default behavior, and can call
		* ShowMenu() ourselves.
		
		LOCAL cMyParam
		cMyParam = "Original Contents"
		* Now call Menu code, passing our LOCAL variable by reference.
		THIS.ShowMenu(Thisform.cRunpath+"Systray_Shortcut.MPR", @cMyParam)	
		WAIT WINDOW cMyParam NOWAIT	&& Display current contents.
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.SysTray1.icondblclickevent
		THISFORM.txtSystrayEvent.Value = "Double-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.SysTray1.iconmiddleclickevent
		THISFORM.txtSystrayEvent.Value = "Middle-Click"
		THISFORM.Paint
		
	ENDPROC

	PROCEDURE pgfSystraySample.pgMenus3.SysTray1.iconrightclickevent
		THISFORM.txtSystrayEvent.Value = "Right-Click"
		THISFORM.Paint
		
		* Default behavior for IconClickEvent and IconRightClickEvent
		* is to call ShowMenu().  By placing code in this method,
		* we're overriding the default behavior, and can call
		* ShowMenu() ourselves.
		
		LOCAL cMyParam
		cMyParam = "Original Contents"
		* Now call Menu code, passing our LOCAL variable by reference.
		THIS.ShowMenu(Thisform.cRunpath+"Systray_Shortcut.MPR", @cMyParam)	
		WAIT WINDOW cMyParam NOWAIT	&& Display current contents.
		
	ENDPROC

ENDDEFINE
