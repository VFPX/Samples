*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="xmladapter.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
#INCLUDE "xmladapter.h"

DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="2" />

	DataSource = .NULL.
	Height = 200
	Left = 117
	Name = "Dataenvironment"
	Top = 194
	Width = 520

ENDDEFINE

DEFINE CLASS form1 AS frmsolution OF "..\solution.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="Line1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkIsDiffgram" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkNoCpTrans" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkPreserveWhiteSpace" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkWrapCharInCDATA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkWrapMemoInCDATA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkUTF8Encoded" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.txtNamespace" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.txtPrefix" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkChangesOnly" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page1.chkBefore" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.cmdClearAll" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.cmdAdd" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.lstAliases" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.lstFields" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkIsBase64" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkIsBinary" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkIsNull" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkNOCPTRANS" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkDisableEncode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.chkWrapInCDATA" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.txtAlias" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.cmdBrowse" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label4" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label5" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.cmdClearTable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.txtXSDType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.Label6" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="tabXMLAdapter.Page2.txtDataType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oWebBrowser" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLoadXML" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRelease" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdToXML" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Editbox1" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: addtable		&& Adds a table to the Listbox
		*m: cleartables		&& Removes all tables from the listbox
		*m: disablexmltable
		*m: displayxmladapter
		*m: displayxmlfield
		*m: edittable		&& Opens the selected table in a browse window for you to edit. You can then see generated diffgrams by selecting the Changes Only and IsDiffGram checkboxes on the XMLAdapter properties page.
		*m: enablexmltable
		*m: removetable		&& Removes a table from the Listbox
		*p: cdbcpath
		*p: csafety
		*p: ldbcalreadyopen
		*p: libsethere
		*p: oxmladapter		&& Reference to the XMLAdapter object
	*</DefinedPropArrayMethod>

	AutoCenter = .T.
	BorderStyle = 3
	Caption = "Using the XMLAdapter"
	cdbcpath = 
	csafety = ON
	DataSession = 2
	DoCreate = .T.
	Height = 558
	HelpContextID = 1231682
	MaxButton = .F.
	Name = "Form1"
	ShowTips = .T.
	Width = 529
	Behindscenes1.Left = 6
	Behindscenes1.Name = "Behindscenes1"
	Behindscenes1.TabIndex = 6
	Behindscenes1.Top = 532
	Cmdclose1.FontName = "Tahoma"
	Cmdclose1.Left = 450
	Cmdclose1.Name = "Cmdclose1"
	Cmdclose1.TabIndex = 7
	Cmdclose1.Top = 532
	C_solutions1.Left = 42
	C_solutions1.Name = "C_solutions1"
	C_solutions1.Top = 535
	Label1.Caption = ""
	Label1.Height = 41
	Label1.Left = 18
	Label1.Name = "Label1"
	Label1.TabIndex = 9
	Label1.Top = 18
	Label1.Width = 498
	Label4.Left = 11
	Label4.Name = "Label4"
	Label4.TabIndex = 10
	Label4.Top = 4
	Shape2.Height = 76
	Shape2.Left = 4
	Shape2.Name = "Shape2"
	Shape2.Top = 12
	Shape2.Width = 520

	ADD OBJECT 'cmdLoadXML' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "L\<oad XML", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 378, ;
		Name = "cmdLoadXML", ;
		TabIndex = 3, ;
		Top = 276, ;
		Width = 61
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdRelease' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "\<Release XML", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 443, ;
		Name = "cmdRelease", ;
		TabIndex = 4, ;
		Top = 276, ;
		Width = 76
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdToXML' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "\<To XML", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 324, ;
		Name = "cmdToXML", ;
		TabIndex = 2, ;
		Top = 276, ;
		Width = 50
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'Editbox1' AS editbox WITH ;
		BorderStyle = 0, ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 72, ;
		Left = 10, ;
		MousePointer = 1, ;
		Name = "Editbox1", ;
		ReadOnly = .T., ;
		ScrollBars = 0, ;
		TabIndex = 8, ;
		TabStop = .F., ;
		Top = 15, ;
		Value = (XML_INSTRUCTIONS), ;
		Width = 510
		*< END OBJECT: BaseClass="editbox" />

	ADD OBJECT 'Line1' AS line WITH ;
		BorderColor = 192,192,192, ;
		Height = 0, ;
		Left = 6, ;
		Name = "Line1", ;
		Top = 529, ;
		Width = 516
		*< END OBJECT: BaseClass="line" />

	ADD OBJECT 'oWebBrowser' AS olecontrol WITH ;
		Height = 221, ;
		Left = 4, ;
		Name = "oWebBrowser", ;
		TabIndex = 5, ;
		Top = 304, ;
		Width = 521
		*< END OBJECT: BaseClass="olecontrol" OLEObject="c:\windows\system32\shdocvw.dll" Value="0M8R4KGxGuEAAAAAAAAAAAAAAAAAAAAAPgADAP7/CQAGAAAAAAAAAAAAAAABAAAAAQAAAAAAAAAAEAAAAgvbwBvAHQAIABFAG4AdAByAHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAUA//////////8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHDRnMMRjcIBAwAAAEABAAAAAAAAAwBPAGwAZQBPAGIAagBlAGMAdABEAGEAdABhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAgEDAAAAAgAAAP////8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArAAAAAAAAAADAEEAYwBjAGUAcwBzAE8AYgBqAFMAaQB0AGUARABhAHQAYQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgACAP///////////////wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAA4AAAAAAAAAAMAQwBoAGEAbgBnAGUAZABQAHIAbwBwAHMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAIA////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAQAAAAAAAAAAwh+VaICjTQEalrAMBP1wWiTAAAANk1AADXFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATAAAAAAAAAAAAAAAOAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAIAAAAAA/////wAAAACc////AAAAAAAAAAAAAAAAAQAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAA4NBXAHM1zxGuaQgAKy4SYggAAAAAAAAATAAAAAEUAgAAAAAAwAAAAAAAAEaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAbQAgCgAnAQABFADITzJLcBbTARJ4Wke/buGIAwAAAARdiIrrHMkRn+gIACsQSGACAAAAAAAAAAIAAAAAAAAAAAAAAAEAAAAAABgAAACKtREAUFJjADEBAAANAJAEFQCQBBUA6jppEKLYCAArMDCdGQAvQzpcAAAAAAAAAAAAAAAAAAAAAAAAAEoAMQAAAAAADS2KtREAUFJPR1JBfjEAADIAAwAEAO++TizumCstgboUAAAAUAByAG8AZwByAGEAbQAgAEYAaQBsAGUAcwAAABgAYg==" />

	ADD OBJECT 'tabXMLAdapter' AS pageframe WITH ;
		ErasePage = .T., ;
		Height = 217, ;
		Left = 4, ;
		Name = "tabXMLAdapter", ;
		PageCount = 2, ;
		TabIndex = 1, ;
		TabOrientation = 2, ;
		Top = 89, ;
		Width = 523, ;
		Page1.Caption = "XMLAdapter Properties", ;
		Page1.FontName = "Tahoma", ;
		Page1.FontSize = 8, ;
		Page1.Name = "Page1", ;
		Page1.PageOrder = 2, ;
		Page2.Caption = "XMLTables", ;
		Page2.FontName = "Tahoma", ;
		Page2.FontSize = 8, ;
		Page2.Name = "Page2", ;
		Page2.PageOrder = 1
		*< END OBJECT: BaseClass="pageframe" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkBefore' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Generate diffgr:before format", ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 13, ;
		Name = "chkBefore", ;
		TabIndex = 2, ;
		Top = 29, ;
		Value = .F., ;
		Width = 162
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkChangesOnly' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Include changes only", ;
		Enabled = .F., ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 25, ;
		Left = 13, ;
		Name = "chkChangesOnly", ;
		TabIndex = 3, ;
		Top = 49, ;
		Value = .F., ;
		Width = 132
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkIsDiffgram' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "IsDiffGram", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 13, ;
		Name = "chkIsDiffgram", ;
		TabIndex = 1, ;
		Top = 8, ;
		Width = 96
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkNoCpTrans' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "No code page translation", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 217, ;
		Name = "chkNoCpTrans", ;
		TabIndex = 5, ;
		Top = 12, ;
		Width = 138
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkPreserveWhiteSpace' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Preserve whitespace", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 217, ;
		Name = "chkPreserveWhiteSpace", ;
		TabIndex = 6, ;
		Top = 29, ;
		Width = 132
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkUTF8Encoded' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "UTF8 Encoded", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 24, ;
		Left = 14, ;
		Name = "chkUTF8Encoded", ;
		TabIndex = 4, ;
		Top = 72, ;
		Width = 132
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkWrapCharInCDATA' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Wrap characters in CDATA sections", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 217, ;
		Name = "chkWrapCharInCDATA", ;
		TabIndex = 8, ;
		Top = 75, ;
		Width = 204
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.chkWrapMemoInCDATA' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Wrap memos in CDATA sections", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 217, ;
		Name = "chkWrapMemoInCDATA", ;
		TabIndex = 7, ;
		Top = 55, ;
		Width = 175
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.Label3' AS label WITH ;
		BackStyle = 0, ;
		Caption = "XMLName:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "Label3", ;
		TabIndex = 13, ;
		Top = 121, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page1.Label4' AS label WITH ;
		BackStyle = 0, ;
		Caption = "XMLNamespace:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 10, ;
		Name = "Label4", ;
		TabIndex = 11, ;
		Top = 145, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page1.Label5' AS label WITH ;
		BackStyle = 0, ;
		Caption = "XMLPrefix:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 285, ;
		Name = "Label5", ;
		TabIndex = 10, ;
		Top = 120, ;
		Width = 97
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page1.txtName' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Left = 100, ;
		Name = "txtName", ;
		TabIndex = 9, ;
		Top = 117, ;
		Width = 156
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.txtNamespace' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 100, ;
		Name = "txtNamespace", ;
		TabIndex = 12, ;
		Top = 141, ;
		Width = 384
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'tabXMLAdapter.Page1.txtPrefix' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 21, ;
		Left = 346, ;
		Name = "txtPrefix", ;
		TabIndex = 14, ;
		Top = 117, ;
		Width = 138
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkDisableEncode' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Disable encode", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkDisableEncode", ;
		TabIndex = 18, ;
		ToolTipText = "Do not encode/decode binary data", ;
		Top = 127, ;
		Width = 120
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkIsBase64' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "IsBase64", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkIsBase64", ;
		TabIndex = 14, ;
		ToolTipText = "Specifies whether or not binary field is Base64 encoded", ;
		Top = 27, ;
		Width = 100
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkIsBinary' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "IsBinary", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkIsBinary", ;
		TabIndex = 15, ;
		ToolTipText = "Specifies whether or not binary field is specified as Binary in the XML schema", ;
		Top = 52, ;
		Width = 100
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkIsNull' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "IsNull", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkIsNull", ;
		TabIndex = 16, ;
		ToolTipText = "Specifies whether or not the field supports Null", ;
		Top = 77, ;
		Width = 100
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkNOCPTRANS' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "No code page translation", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkNOCPTRANS", ;
		TabIndex = 17, ;
		ToolTipText = "No code page translation for character data", ;
		Top = 102, ;
		Width = 138
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.chkWrapInCDATA' AS checkbox WITH ;
		BackStyle = 0, ;
		Caption = "Wrap in CDATA sections", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 17, ;
		Left = 345, ;
		Name = "chkWrapInCDATA", ;
		TabIndex = 19, ;
		ToolTipText = "Specifies whether or not the field is wrapped in CDATA sections.", ;
		Top = 152, ;
		Width = 144
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.cmdAdd' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "\<Add Table", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 5, ;
		Name = "cmdAdd", ;
		TabIndex = 3, ;
		Top = 104, ;
		Width = 64
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'tabXMLAdapter.Page2.cmdBrowse' AS commandbutton WITH ;
		AutoSize = .T., ;
		Caption = "\<Edit Table", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 72, ;
		Name = "cmdBrowse", ;
		TabIndex = 4, ;
		Top = 104, ;
		Width = 63
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'tabXMLAdapter.Page2.cmdClearAll' AS commandbutton WITH ;
		Caption = "C\<lear All", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 72, ;
		Name = "cmdClearAll", ;
		TabIndex = 6, ;
		Top = 129, ;
		Width = 63
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'tabXMLAdapter.Page2.cmdClearTable' AS commandbutton WITH ;
		Caption = "\<Clear Table", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 23, ;
		Left = 5, ;
		Name = "cmdClearTable", ;
		TabIndex = 5, ;
		Top = 129, ;
		Width = 64
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label1' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "XML Field Alias:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 170, ;
		Name = "Label1", ;
		TabIndex = 9, ;
		Top = 105, ;
		Width = 75
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label2' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "XML Field Type:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 169, ;
		Name = "Label2", ;
		TabIndex = 11, ;
		Top = 133, ;
		Width = 77
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label3' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Tables:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 7, ;
		Name = "Label3", ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 37
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label4' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Fields:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 173, ;
		Name = "Label4", ;
		TabIndex = 7, ;
		Top = 5, ;
		Width = 33
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label5' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "XML Field Properties:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 341, ;
		Name = "Label5", ;
		TabIndex = 13, ;
		Top = 6, ;
		Width = 102
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.Label6' AS label WITH ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "XSD Field Type:", ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 15, ;
		Left = 168, ;
		Name = "Label6", ;
		TabIndex = 9, ;
		Top = 161, ;
		Width = 77
		*< END OBJECT: BaseClass="label" />

	ADD OBJECT 'tabXMLAdapter.Page2.lstAliases' AS listbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 76, ;
		Left = 6, ;
		Name = "lstAliases", ;
		TabIndex = 2, ;
		Top = 21, ;
		Width = 157
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.lstFields' AS listbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 76, ;
		Left = 170, ;
		Name = "lstFields", ;
		TabIndex = 8, ;
		Top = 21, ;
		Width = 162
		*< END OBJECT: BaseClass="listbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.Shape1' AS shape WITH ;
		Height = 157, ;
		Left = 337, ;
		Name = "Shape1", ;
		Style = 3, ;
		Top = 21, ;
		Width = 148
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'tabXMLAdapter.Page2.txtAlias' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 22, ;
		Left = 246, ;
		Name = "txtAlias", ;
		TabIndex = 10, ;
		Top = 102, ;
		Width = 86
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.txtDataType' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 22, ;
		Left = 246, ;
		Name = "txtDataType", ;
		TabIndex = 10, ;
		Top = 129, ;
		Width = 86
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'tabXMLAdapter.Page2.txtXSDType' AS textbox WITH ;
		FontName = "Tahoma", ;
		FontSize = 8, ;
		Height = 22, ;
		Left = 246, ;
		Name = "txtXSDType", ;
		TabIndex = 10, ;
		Top = 156, ;
		Width = 86
		*< END OBJECT: BaseClass="textbox" />
	
	PROCEDURE addtable		&& Adds a table to the Listbox
		LPARAMETERS cNewitem
		
		TRY
			IF NOT EMPTY(cNewitem) THEN 
				WITH THISFORM.tabXMLAdapter.Page2
					.lstAliases.AddItem(cNewItem)	
					.lstAliases.Value = cNewItem
					.lstFields.Refresh()
				
					IF .lstAliases.ListCount = 1 THEN
						THISFORM.Enablexmltable()
					ENDIF		
				ENDWITH
			ENDIF
			
		CATCH TO loExc
			MESSAGEBOX (loExc.Message, 48, "Adding Tables")
		ENDTRY
	ENDPROC

	PROCEDURE cleartables		&& Removes all tables from the listbox
		LOCAL oTable as XMLTable
		
		FOR EACH oTable IN Thisform.oXMLAdapter.Tables
		   SELECT (oTable.Alias)
		   USE
		NEXT 
		
		Thisform.oXMLAdapter.Tables.Remove(-1)	&& removes tables from XMLTable collection
		
		WITH THISFORM.tabXMLAdapter.Page2
			.lstAliases.Clear
			.lstFields.Clear
			.txtAlias.Value = ""
			.txtDataType.Value = ""
		ENDWITH	
		THISFORM.Disablexmltable
	ENDPROC

	PROCEDURE Destroy
		LOCAL lcSafety
		
		Thisform.oXMLAdapter = .NULL.
		
		lcSafety = thisform.cSafety 
		SET SAFETY &lcSafety
		
		IF !This.lDBCAlreadyOpen 
			IF DBUSED(this.cDBCPath)
				SET DATABASE TO (this.cDBCPath)
				CLOSE DATABASES 
			ENDIF
		ENDIF
	ENDPROC

	PROCEDURE disablexmltable
		WITH THISFORM.tabXMLAdapter.Page2
			.SetAll('Enabled', .F.)
			.cmdAdd.Enabled = .T.
		ENDWITH	
	ENDPROC

	PROCEDURE displayxmladapter
		
		WITH THISFORM.tabXMLAdapter.Page1
		
			.chkIsDiffgram.Value 		= Thisform.oXMLAdapter.IsDiffgram
			.chkUTF8Encoded.Value 		= Thisform.oXMLAdapter.UTF8Encoded
			.chkWrapMemoInCDATA.Value 	= Thisform.oXMLAdapter.WrapMemoInCDATA
			.chkWrapCharInCDATA.Value 	= Thisform.oXMLAdapter.WrapCharInCDATA
			.chkNOCPTRANS.Value 		= Thisform.oXMLAdapter.NoCpTrans
			.chkPreserveWhiteSpace.Value= Thisform.oXMLAdapter.PreserveWhiteSpace
		
			.txtName.Value 				= STRCONV(Thisform.oXMLAdapter.XMLName,6)
			.txtNamespace.Value 		= STRCONV(Thisform.oXMLAdapter.XMLNamespace,6)
			.txtPrefix.Value 			= STRCONV(Thisform.oXMLAdapter.XMLPrefix,6)
		
		ENDWITH
			
		
		
	ENDPROC

	PROCEDURE displayxmlfield
		LOCAL loXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			loXMLField = Thisform.oXMLAdapter.Tables(STRCONV(.lstAliases.Value,5)).Fields(STRCONV(.lstFields.Value,5))
		
			.chkIsBase64.Value 		= loXMLField.IsBase64
			.chkIsBinary.Value 		= loXMLField.IsBinary
			.chkIsNull.Value 		= loXMLField.IsNull
			.chkNOCPTRANS.Value 	= loXMLField.NoCpTrans
			.chkWrapInCDATA.Value 	= loXMLField.WrapInCDATA
			.chkDisableEncode.Value = loXMLField.DisableEncode
		
			.txtAlias.Value 		= loXMLField.Alias
			.txtDataType.Value 		= loXMLField.DataType
			.txtXSDType.Value		= loXMLField.XSDtype
		ENDWITH	
			
		
	ENDPROC

	PROCEDURE edittable		&& Opens the selected table in a browse window for you to edit. You can then see generated diffgrams by selecting the Changes Only and IsDiffGram checkboxes on the XMLAdapter properties page.
		*-- This method opens the selected table in a browse window for you to edit. 
		*-- You can then see generated diffgrams by selecting the IsDiffGram and Changes Only/Before Format
		*-- checkboxes on the XMLAdapter properties page.
		TRY 
			SELECT (THISFORM.tabXMLAdapter.Page2.lstAliases.Value)
			CURSORSETPROP("Buffering",5)
			BROWSE NOMENU TITLE (THISFORM.tabXMLAdapter.Page2.lstAliases.Value)
		CATCH
		ENDTRY	
				
	ENDPROC

	PROCEDURE enablexmltable
		WITH THISFORM.tabXMLAdapter.Page2
			.SetAll('Enabled', .T.)
			.txtXSDType.ReadOnly = .T.
			.txtDataType.ReadOnly = .T.
		ENDWITH
		
		
	ENDPROC

	PROCEDURE Init
		IF NOT EMPTY(DBC())
			Thisform.oXMLAdapter = NEWOBJECT('XMLAdapter' )
		
			CLOSE TABLES ALL
			SET MULTILOCKS ON
		
		ELSE
			RETURN .F.
		ENDIF	
		
		
	ENDPROC

	PROCEDURE Load
		LOCAL loExc as Exception
		LOCAL lOpenDatabase as Boolean 
		LOCAL lcDBCPath as String
		
		This.cDBCPath = HOME(2)+"Northwind\Northwind.dbc"
		This.lDBCAlreadyOpen = .F.
		
		lcDBCPath = This.cDBCPath 
		lOpenDatabase = .T.
		
		Thisform.cSafety = SET("Safety")
		SET SAFETY OFF
		
		DO WHILE lOpenDatabase
		
			TRY
				IF !DBUSED(lcDBCPath)
					OPEN DATABASE (lcDBCPath)
				ELSE
					SET DATABASE TO (lcDBCPath)
					This.lDBCAlreadyOpen = .T.
				ENDIF	
				lOpenDatabase = .F.
				
			CATCH TO Exc WHEN Exc.ErrorNo = 1 && File Does not Exist
				IF lcDBCPath <> "?"
					IF MESSAGEBOX("This sample needs to open a VFP Database to run. Would you like to select a databse and run this sample?",4,"Using the XMLAdapter") = 7 &&NO
						lOpenDataBase = .F.
					ELSE
						lcDBCPath = "?"
					ENDIF	
				ELSE
					*-- You didn't select a valid database. Get out now.
					lOpenDataBase = .F.	
				ENDIF	
					
			CATCH TO loExc
				&& Unexpected error
				MESSAGEBOX(ERRMSG + "(" + TRANSFORM(loExc.ErrorNo) + ") - " + loExc.Message)
				lOpenDataBase = .F.	
		
			ENDTRY
		
		ENDDO
		
	ENDPROC

	PROCEDURE removetable		&& Removes a table from the Listbox
		*-- Removes the table from the list 
		LPARAMETERS nItemID
		LOCAL loExp As Exception
		
		TRY
			IF NOT EMPTY(nItemID) AND nItemID <> -1 THEN 
				WITH THISFORM.tabXMLAdapter.Page2
					.lstAliases.RemoveListItem(nItemID)	
							
					IF .lstAliases.ListCount = 0 THEN
						THISFORM.Disablexmltable()
						.lstAliases.Clear
						.lstFields.Clear
						.txtAlias.Value = ""
						.txtDataType.Value = ""
					ELSE
						FOR I = 1 TO .lstAliases.ListCount
							cItem = .lstAliases.ListItem(I)
							IF NOT EMPTY(cItem)
								.lstAliases.Value = cItem
								EXIT
							ENDIF
						ENDFOR
						.lstFields.Refresh()
					ENDIF		
				ENDWITH
			ENDIF
			
		CATCH TO loExp 
			MESSAGEBOX (loExp.Message, 48, "Removing Tables")
		ENDTRY
	ENDPROC

	PROCEDURE cmdLoadXML.Click
		cFilename = GETFILE('XML', 'Browse to locate the desire XML file')
		
		IF NOT EMPTY(cFilename) THEN
			TRY
				THISFORM.Cleartables
				Thisform.oXMLAdapter.LoadXML(cFilename, .T.)
				THISFORM.DisplayXMLadapter
				THISFORM.cmdToXML.Enabled = .F.
				
				FOR iLoop = 1 TO Thisform.oXMLAdapter.Tables.Count
					Thisform.oXMLAdapter.Tables.Item(iLoop).ToCursor()
					THISFORM.AddTable(STRCONV(Thisform.oXMLAdapter.Tables.Item(iLoop).XMLName,6))	
				NEXT
				
				THISFORM.oWebbrowser.Navigate(cFileName)
				THISFORM.oWebbrowser.Refresh()
				
			CATCH TO loExc
				MESSAGEBOX(loExc.Message,48,"LoadXML()")
			ENDTRY
		ENDIF
		
		
	ENDPROC

	PROCEDURE cmdRelease.Click
		THISFORM.ClearTables
		Thisform.oXMLAdapter.ReleaseXML(.T.)
		THISFORM.cmdToXML.Enabled = .T.
		THISFORM.owebbrowser.Navigate("about:blank")
		THISFORM.owebbrowser.Refresh
		
	ENDPROC

	PROCEDURE cmdToXML.Click
		LOCAL oXMLTable as XMLTable
		
		TRY
			FOR iLoop = 1 TO Thisform.oXMLAdapter.Tables.Count
				oXMLTable = Thisform.oXMLAdapter.Tables.Item(iLoop)
				IF NOT USED (oXMLTable.Alias) THEN
					USE (oXMLTable.Alias) AGAIN SHARED IN 0
				ENDIF
			NEXT
			
			Thisform.oXMLAdapter.ToXML(XML_FILENAME, , .T., THISFORM.tabXMLAdapter.Page1.chkBefore.Value, THISFORM.tabXMLAdapter.Page1.chkChangesOnly.Value)
		
			THISFORM.oWebbrowser.Navigate(FULLPATH(XML_NAME))
			THISFORM.oWebbrowser.Refresh()
			
		CATCH TO loExc
			MESSAGEBOX (loExc.Message, 48, "Generating XML Data")
		ENDTRY
		
	ENDPROC

	PROCEDURE Editbox1.GotFocus
		thisform.tabXMLAdapter.page2.SetFocus() 
	ENDPROC

	PROCEDURE Editbox1.Init
		This.Value = XML_INSTRUCTIONS
		
	ENDPROC

	PROCEDURE oWebBrowser.BeforeNavigate2
		*** ActiveX Control Event ***
		LPARAMETERS pdisp, url, flags, targetframename, postdata, headers, cancel
		
		
	ENDPROC

	PROCEDURE oWebBrowser.Init
		THIS.Navigate("about:blank")
	ENDPROC

	PROCEDURE oWebBrowser.Refresh
		*** ActiveX Control Method ***
		NODEFAULT
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkBefore.InteractiveChange
		WITH THISFORM.tabXMLAdapter.Page1
			IF NOT EMPTY(THIS.Value) THEN
				.chkChangesOnly.Enabled = .T.
			ELSE
				.chkChangesOnly.Enabled = .F.
			ENDIF
		ENDWITH	
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkIsDiffgram.Click
		Thisform.oXMLAdapter.IsDiffgram = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkIsDiffgram.InteractiveChange
		WITH THISFORM.tabXMLAdapter.Page1
			IF NOT EMPTY(THIS.Value) THEN
				.chkBefore.Enabled = .T.
			ELSE
				.chkBefore.Enabled = .F.
				.chkChangesOnly.Enabled = .F.
			ENDIF
		ENDWITH	
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkNoCpTrans.Click
		Thisform.oXMLAdapter.NoCpTrans = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkPreserveWhiteSpace.Click
		Thisform.oXMLAdapter.PreserveWhiteSpace = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkUTF8Encoded.Click
		Thisform.oXMLAdapter.UTF8Encoded = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkWrapCharInCDATA.Click
		Thisform.oXMLAdapter.WrapCharInCDATA = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.chkWrapMemoInCDATA.Click
		Thisform.oXMLAdapter.WrapMemoInCDATA = THIS.Value
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.txtName.InteractiveChange
		TRY
			Thisform.oXMLAdapter.XMLName = STRCONV(ALLTRIM(THIS.Value),5)
		CATCH TO loExc
			MESSAGEBOX ("Error detected: (" + TRANSFORM(loExc.ErrorNo) + ") - " +  loExc.Message,0,"XMLName")
		ENDTRY
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.txtNamespace.InteractiveChange
		TRY
			Thisform.oXMLAdapter.XMLNameSpace = STRCONV(ALLTRIM(THIS.Value),5)
		CATCH TO loExc
			MESSAGEBOX ("Error detected: (" + TRANSFORM(loExc.ErrorNo) + ") - " +  loExc.Message,0,"XMLNameSpace")
		ENDTRY
	ENDPROC

	PROCEDURE tabXMLAdapter.Page1.txtPrefix.InteractiveChange
		TRY
			Thisform.oXMLAdapter.XMLPrefix = STRCONV(ALLTRIM(THIS.Value),5)
		CATCH TO loExc
			MESSAGEBOX ("Error detected: (" + TRANSFORM(loExc.ErrorNo) + ") - " +  loExc.Message,0,"XMLPrefix")
		ENDTRY
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.Activate
		IF THIS.LstFields.ListCount = 0 THEN
			THISFORM.Disablexmltable
		ENDIF
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkDisableEncode.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.DisableEncode = THIS.Value
		
		ENDWITH
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkIsBase64.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(STRCONV(.lstAliases.Value,5)).Fields(STRCONV(.lstFields.Value,5))
			oXMLField.IsBase64 = THIS.Value
		
		ENDWITH
		
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkIsBinary.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.IsBinary = THIS.Value
		
		ENDWITH
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkIsNull.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.IsNull = THIS.Value
		
		ENDWITH
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkNOCPTRANS.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.NoCPTrans = THIS.Value
		
		ENDWITH
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.chkWrapInCDATA.InteractiveChange
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.WrapInCDATA = THIS.Value
		
		ENDWITH
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.cmdAdd.Click
		LOCAL cNewItem as String
		
		TRY
			SELECT 0
			USE ? SHARED IN 0
			
			cNewItem = LOWER(ALIAS())
			
			IF NOT EMPTY (cNewItem) THEN 
				Thisform.oXMLAdapter.AddTableSchema(cNewItem)
				THISFORM.AddTable(cNewItem)
			ENDIF
			
		CATCH TO loExc WHEN loExc.ErrorNo = 3 && alias already in use
			MESSAGEBOX ("This alias is already in the list.",48, "Add Tables")
		ENDTRY	
		
		
		
		
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.cmdBrowse.Click
		Thisform.EditTable()
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.cmdClearAll.Click
		THISFORM.ClearTables()
		
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.cmdClearTable.Click
		LOCAL cItem as String
		LOCAL nItemID as Integer 
		
		TRY
			
			cItem = This.Parent.LstAliases.Value
			nItemID = This.Parent.LstAliases.ListItemId 
			
			IF NOT EMPTY (cItem) THEN 
			
				Thisform.oXMLAdapter.Tables.Remove(STRCONV(cItem,5))
				
				SELECT (cItem)
				USE 
				
				THISFORM.RemoveTable(nItemID)
			ENDIF
			
		CATCH TO loExc WHEN loExc.ErrorNo = 3 && alias already in use
			MESSAGEBOX ("Alias is already in the list...",48, "Adding tables...")
		ENDTRY	
		
		
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.lstAliases.DblClick
		Thisform.EditTable()
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.lstAliases.InteractiveChange
		THISFORM.TabXMLAdapter.Page2.lstfields.Refresh()
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.lstFields.InteractiveChange
		THISFORM.Displayxmlfield()
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.lstFields.ProgrammaticChange
		THISFORM.DisplayXMLfield()
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.lstFields.Refresh
		LOCAL iLoop as Integer
		LOCAL oXMLTable as XMLTable
		LOCAL lcTables as String
		
		lcTables = THISFORM.tabXMLAdapter.Page2.lstAliases.Value
		
		IF NOT(EMPTY(lcTables))
			oXMLTable = Thisform.oXMLAdapter.Tables(STRCONV(lcTables,5))
		ENDIF	
		
		THIS.Clear
		
		IF VARTYPE(oXMLTable) == "O" THEN
			&& navigates through the Fields collection
			FOR iLoop = 1 TO oXMLTable.Fields.Count
				oXMLField = oXMLTable.Fields.Item(iLoop)
				THIS.AddItem(STRCONV(oXMLField.XMLName,6))
			NEXT
			
			THIS.Value = THIS.List(1)
		ENDIF
		
	ENDPROC

	PROCEDURE tabXMLAdapter.Page2.txtAlias.LostFocus
		LOCAL oXMLField as XMLField
		
		WITH THISFORM.tabXMLAdapter.Page2
		
			oXMLField = Thisform.oXMLAdapter.Tables(strconv(.lstAliases.Value,5)).Fields(strconv(.lstFields.Value,5))
			oXMLField.Alias = THIS.Value
		ENDWITH
	ENDPROC

ENDDEFINE
